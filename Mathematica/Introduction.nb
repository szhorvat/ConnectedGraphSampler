Notebook[{

Cell[CellGroupData[{
Cell["Connected Graph Sampler", \
"Title",ExpressionUUID->"dfb81096-b7cb-422e-8ce8-03e4ab656479"],

Cell[CellGroupData[{

Cell["Prerequisites", \
"Section",ExpressionUUID->"d13901d1-b639-4bd9-b592-05dc87449da7"],

Cell[TextData[{
 "To use the ",
 StyleBox["ConnectedGraphSampler",
  FontWeight->"Bold"],
 " package, you need:"
}], "Text",ExpressionUUID->"2bf05bb6-c9af-499e-9aa5-c174d43306b3"],

Cell[CellGroupData[{

Cell["Mathematica 10.0.2 or later.", \
"Item",ExpressionUUID->"58e833b1-b88f-41cf-9b45-2776bc2c01db"],

Cell["A C++ compiler that supports the C++14 standard.", \
"Item",ExpressionUUID->"06e829d5-a601-4b91-a572-cf93284591fd"],

Cell[TextData[{
 "The LTemplate package. See ",
 ButtonBox["https://github.com/szhorvat/LTemplate",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/szhorvat/LTemplate"], None},
  ButtonNote->"https://github.com/szhorvat/LTemplate"],
 " for installation instructions."
}], "Item",ExpressionUUID->"d9708105-7fc6-46aa-84bf-f1212ab9f72d"]
}, Open  ]],

Cell["\<\
To check if Mathematica is already set up to use your installed C compiler, \
verify that the following does not return an empty list:\
\>", "Text",ExpressionUUID->"56c780f7-a645-49bd-85bd-4e508ad59e04"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}], "\n", 
 RowBox[{"CCompilers", "[", 
  "]"}]}], "Input",ExpressionUUID->"e56e6310-1cd9-42de-a4cf-93e5d208e009"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting started", \
"Section",ExpressionUUID->"099c8f58-58b2-4945-889d-1c30dab7051d"],

Cell["\<\
Add the package to the search path and load the package. The first time it is \
loaded, the C++ component will be automatically compiled. \
\>", "Text",ExpressionUUID->"41d62106-ccc7-49b5-aa36-60d157230fb6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$packagePath", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<.\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"Not", "@", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"$Path", ",", "$packagePath"}], "]"}]}], ",", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"$Path", ",", "$packagePath"}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Get", "[", "\"\<ConnectedGraphSampler`\>\"", "]"}]}], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"2318eba1-56ae-4983-8868-27f343e1b590"],

Cell["\<\
If compilation has failed, the most likely causes are: (1) The LTemplate \
package was not installed (2) No suitable C++ compiler is present on the \
system.\
\>", "Text",ExpressionUUID->"74df72ae-2e46-46a7-ae2f-b7d0e39583c5"],

Cell[TextData[{
 "Use ",
 ButtonBox["?",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Information"],
 " to obtain information about the symbols provided by the package:"
}], "Text",ExpressionUUID->"d6caa78c-c6ad-4000-bd80-40c9f0059f84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ConnectedGraphSampler`*"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"87fe3a23-7c32-4d7b-94ab-ceefe1f72fc0"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ConnectedGraphSampler`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              
              StyleBox["ConnectedGraphSampler`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["CGSGraphicalQ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-61e7c4d3-ad02-45c2-96ed-71718c3b9f42", {
                   "CGSGraphicalQ", "ConnectedGraphSampler`"}, False},
                 ButtonNote->"ConnectedGraphSampler`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CGSSample", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-61e7c4d3-ad02-45c2-96ed-71718c3b9f42", {
                   "CGSSample", "ConnectedGraphSampler`"}, False},
                 ButtonNote->"ConnectedGraphSampler`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Connected", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-61e7c4d3-ad02-45c2-96ed-71718c3b9f42", {
                   "Connected", "ConnectedGraphSampler`"}, False},
                 ButtonNote->"ConnectedGraphSampler`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CGSPotentiallyConnectedQ", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-61e7c4d3-ad02-45c2-96ed-71718c3b9f42", {
                   "CGSPotentiallyConnectedQ", "ConnectedGraphSampler`"}, 
                   False},
                 ButtonNote->"ConnectedGraphSampler`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CGSSampleProp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-61e7c4d3-ad02-45c2-96ed-71718c3b9f42", {
                   "CGSSampleProp", "ConnectedGraphSampler`"}, False},
                 ButtonNote->"ConnectedGraphSampler`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ConnectedGraphSampler", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-61e7c4d3-ad02-45c2-96ed-71718c3b9f42", {
                   "ConnectedGraphSampler", "ConnectedGraphSampler`"}, False},
                 
                 ButtonNote->"ConnectedGraphSampler`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellLabel->
  "Out[10]=",ExpressionUUID->"526a01dd-18b6-495c-898b-1815e9b68b86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CGSSample"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"720f1e01-eca4-4bc1-a839-9652e09bc9ca"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CGSSample[degrees] generates a biased sample from \
the set of graphs with the given degrees. The result is returned in the form \
{graph, Log[samplingWeight]}.\\nCGSSample[degrees, Connected -> True] samples \
only connected graphs.\\nCGSSample[degrees, n] generates n biased \
samples.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"CGSSample", "[", 
                    RowBox[{"ConnectedGraphSampler`Private`degrees_", ",", 
                    RowBox[{
                    "ConnectedGraphSampler`Private`n_Integer", "?", 
                    "NonNegative"}], ",", 
                    RowBox[{"ConnectedGraphSampler`Private`opt", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"ConnectedGraphSampler`Private`catch", "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ConnectedGraphSampler`Private`sampler", "=", 
                    RowBox[{
                    "ConnectedGraphSampler`LTemplate`Make", 
                    "[", "\<\"ConnectedGraphSampler\"\>", "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"ConnectedGraphSampler`Private`check", "[", 
                    RowBox[{"ConnectedGraphSampler`Private`sampler", "[", 
                    
                    RowBox[{"\<\"setDS\"\>", "[", 
                    "ConnectedGraphSampler`Private`degrees", "]"}], "]"}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "Connected", "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ConnectedGraphSampler`Private`toGraph", "[", 
                    RowBox[{
                    RowBox[{
                    "Length", "[", "ConnectedGraphSampler`Private`degrees", 
                    "]"}], ",", "ConnectedGraphSampler`Private`opt"}], "]"}], 
                    "[", 
                    RowBox[{"ConnectedGraphSampler`Private`check", "[", 
                    RowBox[{"ConnectedGraphSampler`Private`sampler", "[", 
                    RowBox[{"\<\"generateConnSample\"\>", "[", "]"}], "]"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"ConnectedGraphSampler`Private`sampler", "[", 
                    RowBox[{"\<\"getLogProb\"\>", "[", "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", "ConnectedGraphSampler`Private`n", "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ConnectedGraphSampler`Private`toGraph", "[", 
                    RowBox[{
                    RowBox[{
                    "Length", "[", "ConnectedGraphSampler`Private`degrees", 
                    "]"}], ",", "ConnectedGraphSampler`Private`opt"}], "]"}], 
                    "[", 
                    RowBox[{"ConnectedGraphSampler`Private`check", "[", 
                    RowBox[{"ConnectedGraphSampler`Private`sampler", "[", 
                    RowBox[{"\<\"generateSample\"\>", "[", "]"}], "]"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"ConnectedGraphSampler`Private`sampler", "[", 
                    RowBox[{"\<\"getLogProb\"\>", "[", "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", "ConnectedGraphSampler`Private`n", "}"}]}], 
                    "]"}]}], "]"}]}]}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"CGSSample", "[", 
                    RowBox[{"ConnectedGraphSampler`Private`degrees_", ",", 
                    RowBox[{"ConnectedGraphSampler`Private`opt", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"First", "[", 
                    RowBox[{"CGSSample", "[", 
                    RowBox[{
                    "ConnectedGraphSampler`Private`degrees", ",", "1", ",", 
                    "ConnectedGraphSampler`Private`opt"}], "]"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "CGSSample", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ConnectedGraphSampler`CGSSample] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AnnotationRules", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DirectedEdges", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeCapacity", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeCost", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"EdgeLabelStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeWeight", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Editable", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GraphHighlight", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GraphHighlightStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphRoot", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Properties", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"VertexCapacity", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexCoordinates", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"VertexLabelStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexShape", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexShapeFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexWeight", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Connected", "\[Rule]", "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "60", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "60", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ConnectedGraphSampler`CGSSample\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CGSSample[degrees] generates a biased sample from \
the set of graphs with the given degrees. The result is returned in the form \
{graph, Log[samplingWeight]}.\\nCGSSample[degrees, Connected -> True] samples \
only connected graphs.\\nCGSSample[degrees, n] generates n biased \
samples.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "CGSSample[degrees] generates a biased sample from the set of graphs with \
the given degrees. The result is returned in the form {graph, \
Log[samplingWeight]}.\nCGSSample[degrees, Connected -> True] samples only \
connected graphs.\nCGSSample[degrees, n] generates n biased samples.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ConnectedGraphSampler`CGSSample, {
      ConnectedGraphSampler`CGSSample[
         Pattern[ConnectedGraphSampler`Private`degrees, 
          Blank[]], 
         PatternTest[
          Pattern[ConnectedGraphSampler`Private`n, 
           Blank[Integer]], NonNegative], 
         Pattern[ConnectedGraphSampler`Private`opt, 
          OptionsPattern[]]] :> ConnectedGraphSampler`Private`catch[
         Block[{
          ConnectedGraphSampler`Private`sampler = 
           ConnectedGraphSampler`LTemplate`Make["ConnectedGraphSampler"]}, 
          ConnectedGraphSampler`Private`check[
            ConnectedGraphSampler`Private`sampler[
             "setDS"[ConnectedGraphSampler`Private`degrees]]]; If[
            OptionValue[ConnectedGraphSampler`Connected], 
            Table[{
              ConnectedGraphSampler`Private`toGraph[
               Length[ConnectedGraphSampler`Private`degrees], 
               ConnectedGraphSampler`Private`opt][
               ConnectedGraphSampler`Private`check[
                ConnectedGraphSampler`Private`sampler[
                 "generateConnSample"[]]]], 
              ConnectedGraphSampler`Private`sampler[
               "getLogProb"[]]}, {ConnectedGraphSampler`Private`n}], 
            Table[{
              ConnectedGraphSampler`Private`toGraph[
               Length[ConnectedGraphSampler`Private`degrees], 
               ConnectedGraphSampler`Private`opt][
               ConnectedGraphSampler`Private`check[
                ConnectedGraphSampler`Private`sampler[
                 "generateSample"[]]]], 
              ConnectedGraphSampler`Private`sampler[
               "getLogProb"[]]}, {ConnectedGraphSampler`Private`n}]]]], 
       ConnectedGraphSampler`CGSSample[
         Pattern[ConnectedGraphSampler`Private`degrees, 
          Blank[]], 
         Pattern[ConnectedGraphSampler`Private`opt, 
          OptionsPattern[]]] :> First[
         ConnectedGraphSampler`CGSSample[
         ConnectedGraphSampler`Private`degrees, 1, 
          ConnectedGraphSampler`Private`opt]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ConnectedGraphSampler`CGSSample, {
      SyntaxInformation[ConnectedGraphSampler`CGSSample] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> 
      Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, 
      AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, 
      BaseStyle -> {}, ContentSelectable -> Automatic, DirectedEdges -> 
      Automatic, EdgeCapacity -> Automatic, EdgeCost -> Automatic, EdgeLabels -> 
      None, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> Automatic, 
      EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> False, 
      Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> 
      None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, 
      GraphHighlight -> {}, GraphHighlightStyle -> Automatic, GraphLayout -> 
      Automatic, GraphRoot -> Automatic, GraphStyle -> Automatic, GridLines -> 
      None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, LabelStyle -> {}, PerformanceGoal -> Automatic, 
      PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> 
      Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, Ticks -> 
      Automatic, TicksStyle -> {}, VertexCapacity -> Automatic, 
      VertexCoordinates -> Automatic, VertexLabels -> None, VertexLabelStyle -> 
      Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, 
      VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> 
      Automatic, ConnectedGraphSampler`Connected -> False}, 
    "Attributes" -> {}, "FullName" -> "ConnectedGraphSampler`CGSSample"], 
   False]]], "Output",
 CellLabel->
  "Out[11]=",ExpressionUUID->"1a5b24cc-bcb8-4918-ad0d-c55735e6cbb1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usage", \
"Section",ExpressionUUID->"f64e25d2-3fbb-4ed0-944f-9b85faae02c8"],

Cell[CellGroupData[{

Cell["Basic usage", \
"Subsubsection",ExpressionUUID->"c529d133-a50b-45f1-bc40-86abc22a5a8b"],

Cell[TextData[{
 "Create a single random graph with a given degree sequence. The function \
returns the result in the format ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"graph", ",", " ", 
    RowBox[{"Log", "[", "samplingWeight", "]"}]}], "}"}]],ExpressionUUID->
  "d7f37963-d4df-4056-a825-c1b9f44101bc"],
 ". All standard graph styling options may be used."
}], "Text",ExpressionUUID->"3137cdbf-cc76-4d6a-8d56-274738336d22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CGSSample", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"GraphStyle", "\[Rule]", "\"\<IndexLabeled\>\""}], ",", 
   RowBox[{"VertexSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"fdf92a22-17c2-4b6d-a98b-452fce078afb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 4}, {1, 3}, {1, 2}, {2, 6}, {2, 3}, {4, 5}}}, {
        GraphStyle -> "IndexLabeled", VertexSize -> {Large}}]], Typeset`boxes,
       Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          GrayLevel[0], 
          Opacity[1]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
         Directive[
          GrayLevel[1], 
          EdgeForm[{
            GrayLevel[0]}]], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.075297606533502, 0.5336999383097378}, {
             0.15821419673007495`, 0.15821419673007495`}], "DynamicName", 
            BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox[
             StyleBox["1", 
              GrayLevel[0], StripOnInput -> False], TraditionalForm], 
            DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.9731947372760843, 0.6602390270300581}, {
             0.15821419673007495`, 0.15821419673007495`}], "DynamicName", 
            BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox[
             StyleBox["2", 
              GrayLevel[0], StripOnInput -> False], TraditionalForm], 
            DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.4089443538679678`, 0.}, {0.15821419673007495`, 
             0.15821419673007495`}], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox[
             StyleBox["3", 
              GrayLevel[0], StripOnInput -> False], TraditionalForm], 
            DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.2537708010817528`, 0.6633157754693204}, {
             0.15821419673007495`, 0.15821419673007495`}], "DynamicName", 
            BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox[
             StyleBox["4", 
              GrayLevel[0], StripOnInput -> False], TraditionalForm], 
            DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.2327589769165614`, 0.7635202223247706}, {
             0.15821419673007495`, 0.15821419673007495`}], "DynamicName", 
            BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox[
             StyleBox["5", 
              GrayLevel[0], StripOnInput -> False], TraditionalForm], 
            DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0., 0.9660746530939495}, {0.15821419673007495`, 
             0.15821419673007495`}], "DynamicName", BoxID -> "VertexID$6"], 
           InsetBox[
            FormBox[
             StyleBox["6", 
              GrayLevel[0], StripOnInput -> False], TraditionalForm], 
            DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> 
          "VertexLabelID$6"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{2.5799999999999983`, 
         176.41999999999996`}, {-28.086851840956264`, 23.40543895117203}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   RowBox[{"-", "8.237479288613633`"}]}], "}"}]], "Output",
 CellLabel->
  "Out[12]=",ExpressionUUID->"7e32205c-a1d8-45b3-a82e-f456f0e9b922"]
}, Open  ]],

Cell["Sample 6 random graphs.", \
"Text",ExpressionUUID->"852f44c1-4658-43a6-811f-d3376be54801"],

Cell[BoxData[
 RowBox[{
  RowBox[{"degseq", "=", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"ddf2f056-855a-4c38-8986-596067831108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CGSSample", "[", 
  RowBox[{"degseq", ",", "6"}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"646773ba-d1d2-47d3-8dcd-fc3201d6fefe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 2}, {1, 9}, {1, 3}, {2, 3}, {2, 8}, {4, 5}, {4, 7}, {5, 
           6}, {6, 10}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{2.630690534525299, -1.186731565619022}, {
           1.5309278916891953`, -1.1859258700091924`}, {
           2.081705141431205, -0.5065222304557067}, {
           1.4366751545633945`, -2.483748967562461}, {
           2.5011872113771476`, -2.4837489676857185`}, {
           3.566444384088358, -2.483748966437022}, {
           0.5065222304557064, -2.4837489639750867`}, {
           0.5065222304557067, -1.470702409859142}, {
           3.655562052772229, -1.470704503063673}, {
           4.497495819111896, -2.483748964576777}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 3}, {1, 9}, {2, 3}, {2, 8}, {4, 5}, {4, 
              7}, {5, 6}, {6, 10}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.03694799695577858], DiskBox[2, 0.03694799695577858],
              DiskBox[3, 0.03694799695577858], 
             DiskBox[4, 0.03694799695577858], DiskBox[5, 0.03694799695577858],
              DiskBox[6, 0.03694799695577858], 
             DiskBox[7, 0.03694799695577858], DiskBox[8, 0.03694799695577858],
              DiskBox[9, 0.03694799695577858], 
             DiskBox[10, 0.03694799695577858]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "15.961862804926739`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 4}, {1, 2}, {1, 10}, {2, 7}, {2, 6}, {3, 6}, {3, 9}, {4, 
           5}, {5, 8}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.4739110533215525`, 3.3689395504492627`}, {
           0.42111744380615784`, 2.526704662836947}, {0., 
           0.8422348876123156}, {1.6844697752246314`, 2.526704662836947}, {
           1.6844697752246314`, 1.6844697752246314`}, {0., 
           1.6844697752246314`}, {0.8422348876123157, 1.6844697752246314`}, {
           1.6844697752246314`, 0.8422348876123156}, {0., 0.}, {
           2.526704662836947, 2.526704662836947}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 4}, {1, 10}, {2, 6}, {2, 7}, {3, 6}, {3, 
              9}, {4, 5}, {5, 8}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.032828104576223704], 
             DiskBox[2, 0.032828104576223704], 
             DiskBox[3, 0.032828104576223704], 
             DiskBox[4, 0.032828104576223704], 
             DiskBox[5, 0.032828104576223704], 
             DiskBox[6, 0.032828104576223704], 
             DiskBox[7, 0.032828104576223704], 
             DiskBox[8, 0.032828104576223704], 
             DiskBox[9, 0.032828104576223704], 
             DiskBox[10, 0.032828104576223704]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "16.169738884110156`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 10}, {1, 8}, {1, 9}, {2, 5}, {2, 4}, {2, 6}, {3, 7}, {3, 
           4}, {5, 6}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.3707852057508645`, -2.7322528780938655`}, {
           3.8430001893111414`, -0.8575215472387219}, {
           1.4823212099998222`, -0.857426995694086}, {
           2.6257714461021546`, -0.8575080867900834}, {
           4.71953289028687, -0.5092379924577359}, {
           4.719760584334823, -1.2054019006125332`}, {
           0.5092379924577362, -0.857329907142447}, {
           2.241619280275576, -2.2418947935676363`}, {
           1.361954016418813, -3.7324579770020563`}, {
           0.5092379924577362, -2.223877885528005}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 8}, {1, 9}, {1, 10}, {2, 4}, {2, 5}, {2, 6}, {3, 
              4}, {3, 7}, {5, 6}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.038333799879906635], 
             DiskBox[2, 0.038333799879906635], 
             DiskBox[3, 0.038333799879906635], 
             DiskBox[4, 0.038333799879906635], 
             DiskBox[5, 0.038333799879906635], 
             DiskBox[6, 0.038333799879906635], 
             DiskBox[7, 0.038333799879906635], 
             DiskBox[8, 0.038333799879906635], 
             DiskBox[9, 0.038333799879906635], 
             DiskBox[10, 0.038333799879906635]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "16.14953617679264`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 6}, {1, 2}, {1, 3}, {2, 10}, {2, 8}, {3, 7}, {4, 5}, {4, 
           6}, {5, 9}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.0755521090731122`, 1.7208833745169791`}, {
           0.43022084362924484`, 0.8604416872584895}, {1.7208833745169794`, 
           0.8604416872584895}, {2.581325061775469, 1.7208833745169791`}, {
           2.581325061775469, 0.8604416872584895}, {1.8284385854242906`, 
           2.581325061775469}, {1.7208833745169794`, 0.}, {0., 0.}, {
           2.581325061775469, 0.}, {0.8604416872584897, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 3}, {1, 6}, {2, 8}, {2, 10}, {3, 7}, {4, 
              5}, {4, 6}, {5, 9}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.0271598753534191], DiskBox[2, 0.0271598753534191], 
             DiskBox[3, 0.0271598753534191], DiskBox[4, 0.0271598753534191], 
             DiskBox[5, 0.0271598753534191], DiskBox[6, 0.0271598753534191], 
             DiskBox[7, 0.0271598753534191], DiskBox[8, 0.0271598753534191], 
             DiskBox[9, 0.0271598753534191], 
             DiskBox[10, 0.0271598753534191]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "16.10074601262321`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 2}, {1, 9}, {1, 4}, {2, 6}, {2, 3}, {3, 5}, {4, 8}, {5, 
           10}, {6, 7}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.42111744380615784`, 1.6844697752246316`}, {
           1.4739110533215525`, 2.526704662836947}, {1.6844697752246314`, 
           1.6844697752246316`}, {0., 0.8422348876123158}, {
           1.6844697752246314`, 0.8422348876123158}, {2.526704662836947, 
           1.6844697752246316`}, {2.526704662836947, 0.8422348876123158}, {0.,
            0.}, {0.8422348876123157, 0.8422348876123158}, {
           1.6844697752246314`, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 4}, {1, 9}, {2, 3}, {2, 6}, {3, 5}, {4, 
              8}, {5, 10}, {6, 7}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.026746385568939296], 
             DiskBox[2, 0.026746385568939296], 
             DiskBox[3, 0.026746385568939296], 
             DiskBox[4, 0.026746385568939296], 
             DiskBox[5, 0.026746385568939296], 
             DiskBox[6, 0.026746385568939296], 
             DiskBox[7, 0.026746385568939296], 
             DiskBox[8, 0.026746385568939296], 
             DiskBox[9, 0.026746385568939296], 
             DiskBox[10, 0.026746385568939296]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "16.626839108519988`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 8}, {1, 3}, {1, 9}, {2, 3}, {2, 4}, {2, 7}, {4, 5}, {5, 
           6}, {6, 10}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.42111744380615784`, 1.6844697752246314`}, {
           1.4739110533215525`, 3.3689395504492627`}, {0.42111744380615784`, 
           2.526704662836947}, {1.6844697752246314`, 2.526704662836947}, {
           1.6844697752246314`, 1.6844697752246314`}, {1.6844697752246314`, 
           0.8422348876123156}, {2.526704662836947, 2.526704662836947}, {0., 
           0.8422348876123156}, {0.8422348876123157, 0.8422348876123156}, {
           1.6844697752246314`, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 3}, {1, 8}, {1, 9}, {2, 3}, {2, 4}, {2, 7}, {4, 
              5}, {5, 6}, {6, 10}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.032828104576223704], 
             DiskBox[2, 0.032828104576223704], 
             DiskBox[3, 0.032828104576223704], 
             DiskBox[4, 0.032828104576223704], 
             DiskBox[5, 0.032828104576223704], 
             DiskBox[6, 0.032828104576223704], 
             DiskBox[7, 0.032828104576223704], 
             DiskBox[8, 0.032828104576223704], 
             DiskBox[9, 0.032828104576223704], 
             DiskBox[10, 0.032828104576223704]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "15.979881310429416`"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[14]=",ExpressionUUID->"4351b982-d8b3-44da-8f61-fbff510b6a52"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Connected graphs", \
"Subsubsection",ExpressionUUID->"be8124fb-6b4e-4a7e-a7d1-3a2197ad55c8"],

Cell[TextData[{
 "Sample 6 ",
 StyleBox["connected",
  FontSlant->"Italic"],
 " graphs with the same degree sequence."
}], "Text",ExpressionUUID->"8af9e93c-fa03-46a7-9c89-2bdf7cccf107"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CGSSample", "[", 
  RowBox[{"degseq", ",", "6", ",", 
   RowBox[{"Connected", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"c6484b90-3586-4868-933f-7ed8416eb93b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 5}, {1, 6}, {1, 4}, {2, 5}, {2, 3}, {2, 10}, {3, 9}, {4, 
           8}, {6, 7}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.43301270189221935`, 1.7320508075688772`}, {
           2.165063509461097, 1.7320508075688772`}, {1.7320508075688774`, 
           0.8660254037844386}, {0., 0.8660254037844386}, {1.299038105676658, 
           2.598076211353316}, {0.8660254037844387, 0.8660254037844386}, {
           0.8660254037844387, 0.}, {0., 0.}, {1.7320508075688774`, 0.}, {
           2.598076211353316, 0.8660254037844386}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 5}, {2, 10}, {3, 
              9}, {4, 8}, {6, 7}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.027286130334401623], 
             DiskBox[2, 0.027286130334401623], 
             DiskBox[3, 0.027286130334401623], 
             DiskBox[4, 0.027286130334401623], 
             DiskBox[5, 0.027286130334401623], 
             DiskBox[6, 0.027286130334401623], 
             DiskBox[7, 0.027286130334401623], 
             DiskBox[8, 0.027286130334401623], 
             DiskBox[9, 0.027286130334401623], 
             DiskBox[10, 0.027286130334401623]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "14.837932708274337`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 5}, {1, 7}, {1, 2}, {2, 10}, {2, 6}, {3, 9}, {3, 6}, {4, 
           5}, {4, 8}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.4739110533215525`, 3.3689395504492627`}, {
           0.42111744380615784`, 2.526704662836947}, {0., 
           0.8422348876123156}, {1.6844697752246314`, 1.6844697752246314`}, {
           1.6844697752246314`, 2.526704662836947}, {0., 
           1.6844697752246314`}, {2.526704662836947, 2.526704662836947}, {
           1.6844697752246314`, 0.8422348876123156}, {0., 0.}, {
           0.8422348876123157, 1.6844697752246314`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 5}, {1, 7}, {2, 6}, {2, 10}, {3, 6}, {3, 
              9}, {4, 5}, {4, 8}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.032828104576223704], 
             DiskBox[2, 0.032828104576223704], 
             DiskBox[3, 0.032828104576223704], 
             DiskBox[4, 0.032828104576223704], 
             DiskBox[5, 0.032828104576223704], 
             DiskBox[6, 0.032828104576223704], 
             DiskBox[7, 0.032828104576223704], 
             DiskBox[8, 0.032828104576223704], 
             DiskBox[9, 0.032828104576223704], 
             DiskBox[10, 0.032828104576223704]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "15.905773338275694`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 2}, {1, 10}, {1, 7}, {2, 9}, {2, 3}, {3, 6}, {4, 5}, {4, 
           6}, {5, 8}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.44971901339751685`, 1.7988760535900674`}, {
           0.8994380267950337, 2.698314080385101}, {1.574016546891309, 
           3.597752107180135}, {2.2485950669875843`, 1.7988760535900674`}, {
           2.2485950669875843`, 0.8994380267950337}, {2.2485950669875843`, 
           2.698314080385101}, {0., 0.8994380267950337}, {2.2485950669875843`,
            0.}, {1.3491570401925506`, 1.7988760535900674`}, {
           0.8994380267950337, 0.8994380267950337}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 7}, {1, 10}, {2, 3}, {2, 9}, {3, 6}, {4, 
              5}, {4, 6}, {5, 8}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.03437804012870442], DiskBox[2, 0.03437804012870442],
              DiskBox[3, 0.03437804012870442], 
             DiskBox[4, 0.03437804012870442], DiskBox[5, 0.03437804012870442],
              DiskBox[6, 0.03437804012870442], 
             DiskBox[7, 0.03437804012870442], DiskBox[8, 0.03437804012870442],
              DiskBox[9, 0.03437804012870442], 
             DiskBox[10, 0.03437804012870442]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "15.844079769270355`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 3}, {1, 4}, {1, 9}, {2, 7}, {2, 6}, {2, 3}, {4, 10}, {5, 
           8}, {5, 6}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.42111744380615784`, 1.6844697752246314`}, {
           1.4739110533215525`, 3.3689395504492627`}, {0.42111744380615784`, 
           2.526704662836947}, {0., 0.8422348876123156}, {1.6844697752246314`,
            1.6844697752246314`}, {1.6844697752246314`, 2.526704662836947}, {
           2.526704662836947, 2.526704662836947}, {1.6844697752246314`, 
           0.8422348876123156}, {0.8422348876123157, 0.8422348876123156}, {0.,
            0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 3}, {1, 4}, {1, 9}, {2, 3}, {2, 6}, {2, 7}, {4, 
              10}, {5, 6}, {5, 8}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.032828104576223704], 
             DiskBox[2, 0.032828104576223704], 
             DiskBox[3, 0.032828104576223704], 
             DiskBox[4, 0.032828104576223704], 
             DiskBox[5, 0.032828104576223704], 
             DiskBox[6, 0.032828104576223704], 
             DiskBox[7, 0.032828104576223704], 
             DiskBox[8, 0.032828104576223704], 
             DiskBox[9, 0.032828104576223704], 
             DiskBox[10, 0.032828104576223704]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "15.818761961286064`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 2}, {1, 6}, {1, 4}, {2, 9}, {2, 3}, {3, 7}, {4, 5}, {5, 
           10}, {6, 8}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.4739110533215525`, 2.526704662836947}, {
           0.42111744380615784`, 1.6844697752246316`}, {0., 
           0.8422348876123158}, {1.6844697752246314`, 1.6844697752246316`}, {
           1.6844697752246314`, 0.8422348876123158}, {2.526704662836947, 
           1.6844697752246316`}, {0., 0.}, {2.526704662836947, 
           0.8422348876123158}, {0.8422348876123157, 0.8422348876123158}, {
           1.6844697752246314`, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 4}, {1, 6}, {2, 3}, {2, 9}, {3, 7}, {4, 
              5}, {5, 10}, {6, 8}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.026746385568939296], 
             DiskBox[2, 0.026746385568939296], 
             DiskBox[3, 0.026746385568939296], 
             DiskBox[4, 0.026746385568939296], 
             DiskBox[5, 0.026746385568939296], 
             DiskBox[6, 0.026746385568939296], 
             DiskBox[7, 0.026746385568939296], 
             DiskBox[8, 0.026746385568939296], 
             DiskBox[9, 0.026746385568939296], 
             DiskBox[10, 0.026746385568939296]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "15.20977308873334`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 9}, {1, 2}, {1, 5}, {2, 4}, {2, 3}, {3, 10}, {4, 6}, {5, 
           8}, {6, 7}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.42111744380615784`, 1.6844697752246316`}, {
           1.4739110533215525`, 2.526704662836947}, {1.6844697752246314`, 
           1.6844697752246316`}, {2.526704662836947, 1.6844697752246316`}, {
           0., 0.8422348876123158}, {2.526704662836947, 0.8422348876123158}, {
           2.526704662836947, 0.}, {0., 0.}, {0.8422348876123157, 
           0.8422348876123158}, {1.6844697752246314`, 0.8422348876123158}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             LineBox[{{1, 2}, {1, 5}, {1, 9}, {2, 3}, {2, 4}, {3, 10}, {4, 
              6}, {5, 8}, {6, 7}}]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.026746385568939296], 
             DiskBox[2, 0.026746385568939296], 
             DiskBox[3, 0.026746385568939296], 
             DiskBox[4, 0.026746385568939296], 
             DiskBox[5, 0.026746385568939296], 
             DiskBox[6, 0.026746385568939296], 
             DiskBox[7, 0.026746385568939296], 
             DiskBox[8, 0.026746385568939296], 
             DiskBox[9, 0.026746385568939296], 
             DiskBox[10, 0.026746385568939296]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"-", "15.577016984021308`"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[15]=",ExpressionUUID->"5ea21327-9264-46fa-a4fb-f36227feba57"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating samples of numerical graph properties", \
"Subsubsection",ExpressionUUID->"aa70f17f-96d3-4928-88da-ced9f1b45832"],

Cell[TextData[{
 "Sample 1000 graphs and compute their assortativity. The result is returned \
as a ",
 ButtonBox["WeightedData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WeightedData"],
 " expression:"
}], "Text",ExpressionUUID->"cfe9b348-58d0-4f65-a57b-f0e2d1a4c267"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sample", "=", 
  RowBox[{"CGSSampleProp", "[", 
   RowBox[{"degseq", ",", "GraphAssortativity", ",", "1000"}], 
   "]"}]}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"292f12d3-8f7f-4582-93fc-f343a11a446a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["WeightedData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, 
               
               GraphicsComplexBox[{{-3.1, 1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 
                1.}, {-3.1, 0.}, {-0.5, 0.}, {1.25, 0.}, {3.25, 0.}, {-3.1, 
                1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 1.}}, {{{}, {}, {}, {}, {
                   GrayLevel[0.5], 
                   PointSize[0.125], 
                   AbsoluteThickness[1.6], 
                   Opacity[0.5], 
                   LineBox[{5, 1}], 
                   LineBox[{6, 2}], 
                   LineBox[{7, 3}], 
                   LineBox[{8, 4}]}}, {{}, {
                   GrayLevel[0.5], 
                   PointSize[0.125], 
                   AbsoluteThickness[1.6], 
                   PointBox[{9, 10, 11, 12}]}, {}}}], {}}, 
              GraphicsComplexBox[CompressedData["
1:eJw1k31Qy3Ecx7e16VGcSrg8VEMTy6EH5D5fKpqHEtGycNVZpFN6IDqa9Hgk
T+eq9XBajpSHVkkP+v6StFbpQU0PaDWnqbC1mrpp4U7vu/e973Xvv1+WAaEH
TlBIJNKmv/23TFg4PDMzjxhuSuvUhJdApZ7/maAaYwIp6WS/2xUQ2yIZqfWf
SyxgM5bxpwn49mCxuaOFEbGdFuNy62s9rOl315/3yYDwcUgwkouaIN9EMN4T
p0+ExZ+bP/9NO9RxxKkY9Ah3O3737kUSsMi1WJE+MIfws2P8BkEf7HHhXHif
QiOWHfSuK5uRwnINl8dgUQkTfpRYGvgF1j3N5oV/pxBeN7lBO5LlII28z5Q8
IhMtQlb3RPsonMq6JcgKJhE1AhNGTLEC2Jd9rYustFgdHxTAZavAZoTB8c7R
YOea2xmRYxNw2mN/wqBsEvdusKqK6J2EIxGe2xwc1NjPrq26pVIDd7B8P36h
wsWlbdMBx7QAlO7DTLISs41C1jWmklBw9+uwB6pR/G6X3yVNNRk5Z1xZVBk9
hMeemqUsGaCgk5+Ufb7mg3hjZnFyaLsO8pSufSKi92JTN2+nLB4VOWD+h+H4
d7gjt+zAVQoNbVYcDfwcWIqr6g0VjkBDtld/GhBRJXByY+PE17/8rOFHQSy7
Faa/FbwRaanoFUvstOV1DwxH38zdl0hFI4/zTnmwB0Fpwzzu2qCDsp8w+eNl
Q3DJrs/evYuCqv0TzdaXj4Jh/zafEDEZXTTN6PJcoIQbQ4dkQQkk1NzW6dqR
qQJhsJckIEYLZ5scV6UtVENRxPrxvI8ayG91NeOKJkFRI26e+jUJ14vKH+nu
1YA3Pa7AiaUG8p1OVh1NC4v1dX49j1KBeUFhQ747CR0tPW5wZEwBkoc8a1oy
GR32vBwauvM7cArXJIYPUtA1ceR0Y6EcnPm6W+tXUtHoStk5pvgLyNIq1PR4
Gsp9KLRdazwApdaxI5Yf5yB7c06XS1UfSAXnN1CX6qGkpJKxvEwJdNi48VTR
+kjeke3jIWuH5ZluK0SvDJB9DpyIC2mGe499pzb/NkT9H9hewrC38B7v6Hl5
aC6itgr3xq6uhdO1xwyXphujlmL63e3cSvjvA5r1YdYP0v/M/rP8BxJlmIA=

               "], {{{}, {
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.2], 
                  EdgeForm[None], 
                  GraphicsGroupBox[
                   
                   PolygonBox[{{1, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 42,
                     41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 
                    27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
                    13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]]}, {}, {}}, {{}, {}, {
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.5], 
                  
                  LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                   16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                    31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
                   45, 46, 47, 48, 49, 50}]}}}]}, AspectRatio -> 1, Axes -> 
             False, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             Background -> GrayLevel[0.93], DisplayFunction -> Identity, 
             Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, GridLines -> {None, None},
              GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {{
                  Directive[
                   AbsoluteThickness[1.6], 
                   RGBColor[0.368417, 0.506779, 0.709798]]}, 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.880722, 0.611041, 0.142051]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.560181, 0.691569, 0.194885]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.922526, 0.385626, 0.209179]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.528488, 0.470624, 0.701351]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.772079, 0.431554, 0.102387]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.363898, 0.618501, 0.782349]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.75, 0]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.647624, 0.37816, 0.614037]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.571589, 0.586483, 0.]]}, "RangePadding" -> 
               Scaled[0.1]}, PlotRange -> All, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0, 0}, {0, 0.5}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, 
               
               GraphicsComplexBox[{{-3.1, 1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 
                1.}, {-3.1, 0.}, {-0.5, 0.}, {1.25, 0.}, {3.25, 0.}, {-3.1, 
                1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 1.}}, {{{}, {}, {}, {}, {
                   GrayLevel[0.5], 
                   PointSize[0.125], 
                   AbsoluteThickness[1.6], 
                   Opacity[0.5], 
                   LineBox[{5, 1}], 
                   LineBox[{6, 2}], 
                   LineBox[{7, 3}], 
                   LineBox[{8, 4}]}}, {{}, {
                   GrayLevel[0.5], 
                   PointSize[0.125], 
                   AbsoluteThickness[1.6], 
                   PointBox[{9, 10, 11, 12}]}, {}}}], {}}, 
              GraphicsComplexBox[CompressedData["
1:eJw1k31Qy3Ecx7e16VGcSrg8VEMTy6EH5D5fKpqHEtGycNVZpFN6IDqa9Hgk
T+eq9XBajpSHVkkP+v6StFbpQU0PaDWnqbC1mrpp4U7vu/e973Xvv1+WAaEH
TlBIJNKmv/23TFg4PDMzjxhuSuvUhJdApZ7/maAaYwIp6WS/2xUQ2yIZqfWf
SyxgM5bxpwn49mCxuaOFEbGdFuNy62s9rOl315/3yYDwcUgwkouaIN9EMN4T
p0+ExZ+bP/9NO9RxxKkY9Ah3O3737kUSsMi1WJE+MIfws2P8BkEf7HHhXHif
QiOWHfSuK5uRwnINl8dgUQkTfpRYGvgF1j3N5oV/pxBeN7lBO5LlII28z5Q8
IhMtQlb3RPsonMq6JcgKJhE1AhNGTLEC2Jd9rYustFgdHxTAZavAZoTB8c7R
YOea2xmRYxNw2mN/wqBsEvdusKqK6J2EIxGe2xwc1NjPrq26pVIDd7B8P36h
wsWlbdMBx7QAlO7DTLISs41C1jWmklBw9+uwB6pR/G6X3yVNNRk5Z1xZVBk9
hMeemqUsGaCgk5+Ufb7mg3hjZnFyaLsO8pSufSKi92JTN2+nLB4VOWD+h+H4
d7gjt+zAVQoNbVYcDfwcWIqr6g0VjkBDtld/GhBRJXByY+PE17/8rOFHQSy7
Faa/FbwRaanoFUvstOV1DwxH38zdl0hFI4/zTnmwB0Fpwzzu2qCDsp8w+eNl
Q3DJrs/evYuCqv0TzdaXj4Jh/zafEDEZXTTN6PJcoIQbQ4dkQQkk1NzW6dqR
qQJhsJckIEYLZ5scV6UtVENRxPrxvI8ayG91NeOKJkFRI26e+jUJ14vKH+nu
1YA3Pa7AiaUG8p1OVh1NC4v1dX49j1KBeUFhQ747CR0tPW5wZEwBkoc8a1oy
GR32vBwauvM7cArXJIYPUtA1ceR0Y6EcnPm6W+tXUtHoStk5pvgLyNIq1PR4
Gsp9KLRdazwApdaxI5Yf5yB7c06XS1UfSAXnN1CX6qGkpJKxvEwJdNi48VTR
+kjeke3jIWuH5ZluK0SvDJB9DpyIC2mGe499pzb/NkT9H9hewrC38B7v6Hl5
aC6itgr3xq6uhdO1xwyXphujlmL63e3cSvjvA5r1YdYP0v/M/rP8BxJlmIA=

               "], {{{}, {
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.2], 
                  EdgeForm[None], 
                  GraphicsGroupBox[
                   
                   PolygonBox[{{1, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 42,
                     41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 
                    27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
                    13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]]}, {}, {}}, {{}, {}, {
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.5], 
                  LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                   16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                    31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
                   45, 46, 47, 48, 49, 50}]}}}]}, AspectRatio -> 1, Axes -> 
             False, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             Background -> GrayLevel[0.93], DisplayFunction -> Identity, 
             Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, GridLines -> {None, None},
              GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {{
                  Directive[
                   AbsoluteThickness[1.6], 
                   RGBColor[0.368417, 0.506779, 0.709798]]}, 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.880722, 0.611041, 0.142051]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.560181, 0.691569, 0.194885]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.922526, 0.385626, 0.209179]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.528488, 0.470624, 0.701351]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.772079, 0.431554, 0.102387]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.363898, 0.618501, 0.782349]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.75, 0]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.647624, 0.37816, 0.614037]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.571589, 0.586483, 0.]]}, "RangePadding" -> 
               Scaled[0.1]}, PlotRange -> All, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0, 0}, {0, 0.5}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1000", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Weight type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"numeric list\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  WeightedData[Automatic, {{
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[13, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-37, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[13, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[13, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[13, 22], 
     Rational[17, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[13, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-37, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-37, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-37, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-37, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-37, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[13, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[13, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[13, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[17, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-37, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44]}, CompressedData["
1:eJxl2Q1olecVB/Bc1lldTarxI34k1lDbWurYuinIKj5kwzodFbOxijLUDFy1
s0jXdVLL2l3YREtt/Ugd69Z1GbKhLl3dZLNDYVGsrIyK1RrTGM3Nd6LOyawo
DDbv5f09gceXQHi/znPO//zP/5znvbXf3fDNNbmysrKBz5SVNa7Y+8aKvb1h
/feKR184vXPVrFvHu8LJxc1nFjf3hMpNTVWbmvrD2IrCmIpCZzj8TPtfnmnv
C/vHPXZg3GOFcOrN3IYFf2gLC6cOHMwvaQ9Tj9ZWH609H5/Lbywew+8v+0LT
kZ/e6Aq/+UXxGAybx7+zsLCpJ97/87SfXao/dCHMea177mvd58LV/xWPi9H+
ruuL3r6+6GK4Z0/dlD11Q2H5ntHzOt68GP3p3vrWua1vDYSa1bmJq3Nnw1BH
6QjVk/JjJ+ULMa6q0vufRP9Gji0ehdBY8qsQZn7n9aOfzjwfRs9qqZzV0hWv
/7WsYc3+ezrD4m8Xj45w+NiZ3ht3t4XRDzZUPtjQFe3WHMpPPZRvDzUrCxNW
FnrDmNl142bXdUd82ds3u+f8U1WdYUnJ3sfx+pQTz1afePZyqO7MTevMXQiv
jFi3fcS6zlB1pq7mTF1H/H/3XXVj7qrrjPicLF6u6QnLT/z+j5+v6Iv4fXZz
w6TNDQPh+VK8rWFbedv28rbO0Ljh1u4Nt87GdasW1I9fUN8T9u4rHkPh5E8e
v7HwUFc48vfTzbcaCqFycdP4xU09YePHR77221c6wyOjj31x9LHOUL7q2oRV
13pjPDWl9c7F+AervvHSgZ7WiJf8TlnfMnF9S1+Y8t6Oqe/taL8jnqrsXJ7x
66ESPufD/BdHXXngYH/EX/z40Dq3tFB8H1/hgk8/rC4aLETewglvrIef6mbG
1WvTrl67EONif9lzc27/9Ye/fZT/wY9ndUR+zyzFeSny6pEvF4/u8KsZi3bO
WNQVlpTydjaMG5kfMzLfGeOAz+bZrU/+7j8d8f+KEm+uhCda1l37/vjLsa74
u63/hV/3v3Ah5sF/9/H57SI89/XF+vzqyw/t7902jMfGp2pbDv+oL+KpXmqH
mqYNNf0r1hFeyoP48Qvf+CsP4oQDXPBt5YGW4yOqhuuffXWBp9YRx4slfTkT
cRDvPzNdYAcu83YWHRiMcYtn6tr8xLX5s+FLB4qOXor8xRt21QX+ssvOo0W3
KodivHQixUl+nLtPP3Z9UPGtn7dfjHixg1fig5911Zc64n/tlvykLfmByG/3
8Y7e0VfPwTXF0/P4Qcf4T5/efbxIhJ5Yv3hxvf7Q7RUKsT/g4+75g7vmD54O
W0s86ot6ZV36Tj8rijAf6I59TLziuD/TZffVFXvb6ye/UT+5N+IIl31Z/XsO
/6d/WKj+sHA+4p3yyvP4jc/W13fk9emMx/Q11mPGsweK8jR2IL4/7Wb+vpv5
YZ07OGrO0Ly1HVGn8YM99YxfKY78U+/9g2f/++7X26LeRX0t5bs3TG4+NaX5
1Cex3+Ev/YXLrtL1tpgf9auvp/jLV4oP/VNPeHlp6b2fLr239475hV340XE6
BF/1gN/qUV+M9Z3VnfU/l/ULfdBz4ocj3sFdH+OfvMmTuFL9jnNBNnewg190
iT11GvtYpsfW1afVlfXErS/Gfp7hpW5W9+b+8ZVlw/qh/vFEXcJbfs0B+KKe
8MR9vFNn/CrP6kAevE+H6DWc8ALP73+1ZdKrLefuyINzdeUcH60vfjqnzuAn
XnqmbuHDD7yku+aP5oaDFxv7b8+XD++ofHhHV3zOOnikT8mfPMMPLuK4POuX
L78/uy2MmpsfNzc/XMees4748f3k9PKPppd3xX6iDvltffquXl1XV3HuzeoQ
v+K8kP2Hs/4hHn0wnefwasua5bvXLO+7Y05LdVh86gSvrcsPc5n15cfchX/q
Xt9ghz6mcwB91hflZ8L23OTtubY78BAnfvFfHuUHr+msfYB11bE+o17gY151
Tr/kgX/6szkH3nik7+KTddhRT3gc91dZHuBGD+k7Xqk/+bNu3E9lvJQH960r
LnqjjjwHX/sRupnm2RwDb3NMOqfHfp/ha64RR+r/OyW/h+tf/6B7ab+Es/Xp
hDjVC7+sp17xnD1zL70yz3jvuedzRz94sjWeWw+P1zYuWN64YPh5duN8nfUL
PEz3rVE/Mvz1c3OGfqge8Rtv5C/qflYf8LVPYMfz7NVm+VR3+ir/7ffwnH12
6Ix48OT9Jx59+mZ7TziezWtxH5XFqZ+6r974YX28Vz/qhD7QG3y3z9SP8JL/
cR+fvS+P7NJv66oD7+m3cd+Z9Q15hZ95oKx0/Hv4O1Om09bT7/Un6+JZxdLc
hKW53lgn+ITv6XcrfErnJ/NRqvfqK343ye7DTf9WH+KmJ+KCI93VP+Pcnf3X
B82NdAFfxE/X8Ax/4KROo65nforLf3UBL/rtPn/1k1QX8VG+/rS3SITWyLt0
v+M6HOU3zstJH9TX8M768s1vdUXnzVnWoS/mDvOIPNBxebOPYg9/4SoefMJn
30vww3W8l0c4xPklW1e85sl0DlC/6bysP7hOt/E83f+JA/50B3/TvmuOp2Pp
9460b9ET/IO/OhSvfV1aB/qsfgEn8dhvqZOXMr3UF8Sv/s3D5l440gtx4hNd
97z7+JPOG/qF/JsT+W3/nOqg69aVb3kwH9IBeIlfXeKrfsVf+MszPPQDeZQv
/vnvPf6m3wnwCC6+u/NXndB19YI3+lC6/0q/Jzmn955nP+6rsvjx2Xzlff1J
/Pisz8Y5IXsevr5T4C+dpjtpXOZbflhXH4ErHtEh87R9hd8zzHN0nx7SV3ot
HnNi/N0gs+85fVm+8CXtj/afKR/kjb30d5T4XT7DjV3rwBfefjeg69ZL+7Hn
8FZ8cGOX/sqDfNEduuH3r/T7SeSj342yfgEPup5+r9cvzJN0j190XR59r+YH
v8WNp5MzfNPvWezzF576mefT76XO5Uk/kvcUf/sNdaafyMPr54qOXon1CG/7
IXb0P/bpHJ3HI/mEV9rX5D2d8+TP8/aL8mhO1mfx33v0TF2a6/BWfPYNvjPA
1X08cR+v4a1fxP2Q7yOZPpi74u9lGd/oET2Av7mPbsBPnvDInAt3fQoe8p/O
y+penNbHczxmR37Ng1FPM11yjtfyia/6PzzUC36zm34XTXH2nn0qvPED78uT
eVHf0X/haT79P5yyFPI=
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[16]=",ExpressionUUID->"398bddd2-3db7-42e7-b506-ed948d46016c"]
}, Open  ]],

Cell["Compute the mean the standard deviation of the sample:", \
"Text",ExpressionUUID->"ab3c5e7f-ca63-455f-9682-fe56786d6d2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "sample", "]"}], ",", 
   RowBox[{"StandardDeviation", "[", "sample", "]"}]}], "}"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"cf28a8ac-ab1c-466c-a17f-ea25fa250d6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.18067911176757737`"}], ",", "0.2941371430864265`"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[17]=",ExpressionUUID->"3661e759-8af3-4986-b225-0951ebdb9236"]
}, Open  ]],

Cell["Plot the histogram of assortativity values:", \
"Text",ExpressionUUID->"afa409f8-4b16-4de5-afb2-776ccd99c9c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "sample", "]"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"419efb9f-b989-4bae-ab44-843b3fe0c3d1"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.63], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.63], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{-1., 0}, {-0.8, 6.903150183150181}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{26.254403522818222`, 67.4069255404323}, {
           82.09003375116596, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6.903150183150181]& ,
        TagBoxNote->"6.903150183150181"],
       StyleBox["6.903150183150181`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6.903150183150181, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{-0.8, 0}, {-0.6, 62.42217338217335}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{66.9069255404323, 108.0594475580464}, {
           2.901583743237879, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 62.42217338217335]& ,
        TagBoxNote->"62.42217338217335"],
       StyleBox["62.42217338217335`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[62.42217338217335, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{-0.6, 0}, {-0.4, 121.65029236195896`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{107.5594475580464, 
           148.71196957566048`}, {-81.57726095979521, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 121.65029236195896`]& ,
        TagBoxNote->"121.65029236195896"],
       StyleBox["121.65029236195896`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[121.65029236195896`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{-0.4, 0}, {-0.2, 136.51536358703015`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{148.21196957566048`, 
           189.36449159327458`}, {-102.77975844162324`, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 136.51536358703015`]& ,
        TagBoxNote->"136.51536358703015"],
       StyleBox["136.51536358703015`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[136.51536358703015`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{-0.2, 0}, {0., 133.87161850495175`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{188.86449159327458`, 
           230.01701361088865`}, {-99.00890544020453, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 133.87161850495175`]& ,
        TagBoxNote->"133.87161850495175"],
       StyleBox["133.87161850495175`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[133.87161850495175`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 0}, {0.2, 83.24720797720788}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{229.51701361088865`, 
           270.66953562850273`}, {-26.8017884690326, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 83.24720797720788]& ,
        TagBoxNote->"83.24720797720788"],
       StyleBox["83.24720797720788`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[83.24720797720788, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.2, 0}, {0.4, 24.578001628001637`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{270.16953562850273`, 311.32205764611683`}, {
           56.87986236503103, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 24.578001628001637`]& ,
        TagBoxNote->"24.578001628001637"],
       StyleBox["24.578001628001637`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24.578001628001637`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.4, 0}, {0.6, 6.033577533577534}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{310.82205764611683`, 351.9745796637309}, {
           83.33033133425018, 92.43620415686621}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6.033577533577534]& ,
        TagBoxNote->"6.033577533577534"],
       StyleBox["6.033577533577534`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6.033577533577534, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.032, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 0.6}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[18]=",ExpressionUUID->"ecef6122-0ed0-4b00-b2c6-60ef660b213e"]
}, Open  ]],

Cell["\<\
Generate a graphical and potentially connected scale-free degree sequence;\
\>", "Text",ExpressionUUID->"17854bdd-6df8-45c7-8af0-72bd3ef980e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"connectedGraphicalQ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CGSPotentiallyConnectedQ", "[", "#", "]"}], "&&", 
     RowBox[{"CGSGraphicalQ", "[", "#", "]"}]}], "&"}]}], ";"}], "\n", 
 RowBox[{"While", "@", 
  RowBox[{"Not", "@", 
   RowBox[{"connectedGraphicalQ", "[", 
    RowBox[{"ds", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"ZipfDistribution", "[", "1.5", "]"}], ",", "100"}], 
       "]"}]}]}], "]"}]}]}]}], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"be8a77d8-8dcd-47b7-a170-8265e64c3a40"],

Cell["\<\
Sample both from the set of all graphs and from the set of connected graphs, \
then compare the distribution of the clustering coefficient for the two cases:\
\>", "Text",ExpressionUUID->"787b5c7a-61c5-463b-bf2b-ffd12a03c2c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sample1", "=", 
   RowBox[{"CGSSampleProp", "[", 
    RowBox[{"ds", ",", "GlobalClusteringCoefficient", ",", "10000"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sample2", "=", 
   RowBox[{"CGSSampleProp", "[", 
    RowBox[{"ds", ",", "GlobalClusteringCoefficient", ",", "10000", ",", 
     RowBox[{"Connected", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"289f627a-8b06-4ac9-abf4-63d2bcb5a5cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sample1", ",", "sample2"}], "}"}], ",", 
   RowBox[{"{", "0.01", "}"}], ",", "\"\<PDF\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<clustering coefficient\>\"", ",", "\"\<PDF\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<all graphs\>\"", ",", "\"\<connected graphs\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"96823648-06f6-4aa1-84ac-d00e3e184316"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.49699999999999994`]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.49699999999999994`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{{
             
             RectangleBox[{0.019999999999999997`, 0.}, {0.03, 
              5.447823697807824}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.03, 0.}, {0.04, 10.213377734807427`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.04, 0.}, {0.049999999999999996`, 
              8.093422275855456}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.049999999999999996`, 0.}, {0.060000000000000005`,
               19.877154105334146`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.060000000000000005`, 0.}, {0.07, 
              23.319027180473874`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.07, 0.}, {0.08, 17.734804300514206`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.08, 0.}, {0.09000000000000001, 
              7.818817757730452}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.09000000000000001, 0.}, {0.1, 
              2.1072560151652744`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.1, 0.}, {0.11, 3.2480346769053243`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.11, 0.}, {0.12000000000000001`, 
              1.3862136463255623`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.12000000000000001`, 0.}, {0.13, 
              0.4705437033465071}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.13, 0.}, {0.13999999999999999`, 
              0.21680598768631792`}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{0.13999999999999999`, 0.}, {0.15, 
              0.025959945293536797`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.15, 0.}, {0.16, 0.031184118465276627`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.16, 0.}, {0.16999999999999998`, 
              0.005913182557071661}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.16999999999999998`, 0.}, {0.18, 
              0.0026347333341075582`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.18, 0.}, {0.19, 0.0007711494818715792}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.19, 0.}, {0.19999999999999998`, 
              0.00008781197703069127}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.19999999999999998`, 0.}, {0.21, 
              0.00016659061874899818`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.21, 0.}, {0.22, 1.3672742814323347`*^-6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.22, 0.}, {0.22999999999999998`, 
              2.2288916185549183`*^-9}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.22999999999999998`, 0.}, {0.24, 
              1.5942492178433773`*^-8}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.25, 0.}, {0.26, 8.669737106974487*^-10}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.26, 0.}, {0.27, 7.311921034460797*^-12}, 
              "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.49699999999999994`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{{
             
             RectangleBox[{0., 0.}, {0.01, 2.4973815816976384`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.01, 0.}, {0.019999999999999997`, 
              28.20465941767216}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{0.019999999999999997`, 0.}, {0.03, 
              40.026261251999934`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.03, 0.}, {0.04, 20.786287850103108`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.04, 0.}, {0.049999999999999996`, 
              5.167702592561792}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.049999999999999996`, 0.}, {0.060000000000000005`,
               2.936169037692179}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.060000000000000005`, 0.}, {0.07, 
              0.3340913419850259}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.07, 0.}, {0.08, 0.0453926420000279}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.08, 0.}, {0.09000000000000001, 
              0.0019648891340743216`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.09000000000000001, 0.}, {0.1, 
              0.00008188167469488188}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.1, 0.}, {0.11, 7.512754994856585*^-6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.11, 0.}, {0.12000000000000001`, 
              7.243621036297793*^-10}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.0054, 0.}, Frame -> True, FrameLabel -> {{
        FormBox["\"PDF\"", TraditionalForm], None}, {
        FormBox["\"clustering coefficient\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0., 0.27}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"all graphs\"", "\"connected graphs\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.49699999999999994`]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.49699999999999994`]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.97858`", ",", "0.678934`", ",", "0.157834`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.49699999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[48]=",ExpressionUUID->"dc2a0e8b-93cd-45ef-9182-5b42ae5dd4d9"]
}, Open  ]],

Cell["\<\
Plot the histogram of the natural logarithm of sampling weights:\
\>", "Text",ExpressionUUID->"6fbc1b91-0044-40b5-9bfe-20b00310ce28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"weights1", "=", 
   RowBox[{
    RowBox[{"CGSSample", "[", 
     RowBox[{"ds", ",", "10000"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weights2", "=", 
   RowBox[{
    RowBox[{"CGSSample", "[", 
     RowBox[{"ds", ",", "10000", ",", 
      RowBox[{"Connected", "\[Rule]", "True"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"5c64a297-64c4-4a2e-9471-7884834fc60e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"weights1", ",", "weights2"}], "}"}], ",", "Automatic", ",", 
   "\"\<PDF\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<log sampling weights\>\"", ",", "\"\<PDF\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<all graphs\>\"", ",", "\"\<connected graphs\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"a2dc5e44-e2c7-421f-95e5-fb2933520e37"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5389999999999999]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5389999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-488., 0.}, 
                    NCache[{-486., 
                    Rational[1, 20000]}, {-486., 0.00005}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.00005]& , TagBoxNote -> "0.00005"], 
              StyleBox["0.00005`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00005, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-486., 0.}, 
                    NCache[{-484., 
                    Rational[39, 20000]}, {-484., 0.00195}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.00195]& , TagBoxNote -> "0.00195"], 
              StyleBox["0.00195`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00195, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-484., 0.}, 
                    NCache[{-482., 
                    Rational[21, 1250]}, {-482., 0.0168}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0168]& , TagBoxNote -> "0.0168"], 
              StyleBox["0.0168`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0168, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-482., 0.}, 
                    NCache[{-480., 
                    Rational[859, 20000]}, {-480., 0.04295}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.04295]& , TagBoxNote -> "0.04295"], 
              StyleBox["0.04295`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.04295, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-480., 0.}, 
                    NCache[{-478., 
                    Rational[643, 10000]}, {-478., 0.0643}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0643]& , TagBoxNote -> "0.0643"], 
              StyleBox["0.0643`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0643, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-478., 0.}, 
                    NCache[{-476., 
                    Rational[39, 500]}, {-476., 0.078}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.078]& ,
                TagBoxNote -> "0.078"], 
              StyleBox["0.078`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.078, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-476., 0.}, 
                    NCache[{-474., 
                    Rational[403, 5000]}, {-474., 0.0806}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0806]& , TagBoxNote -> "0.0806"], 
              StyleBox["0.0806`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0806, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-474., 0.}, 
                    NCache[{-472., 
                    Rational[711, 10000]}, {-472., 0.0711}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0711]& , TagBoxNote -> "0.0711"], 
              StyleBox["0.0711`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0711, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-472., 0.}, 
                    NCache[{-470., 
                    Rational[1169, 20000]}, {-470., 0.05845}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.05845]& , TagBoxNote -> "0.05845"], 
              StyleBox["0.05845`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.05845, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-470., 0.}, 
                    NCache[{-468., 
                    Rational[817, 20000]}, {-468., 0.04085}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.04085]& , TagBoxNote -> "0.04085"], 
              StyleBox["0.04085`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.04085, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-468., 0.}, 
                    NCache[{-466., 
                    Rational[469, 20000]}, {-466., 0.02345}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.02345]& , TagBoxNote -> "0.02345"], 
              StyleBox["0.02345`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.02345, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-466., 0.}, 
                    NCache[{-464., 
                    Rational[47, 4000]}, {-464., 0.01175}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.01175]& , TagBoxNote -> "0.01175"], 
              StyleBox["0.01175`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.01175, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-464., 0.}, 
                    NCache[{-462., 
                    Rational[4, 625]}, {-462., 0.0064}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0064]& , TagBoxNote -> "0.0064"], 
              StyleBox["0.0064`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0064, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-462., 0.}, 
                    NCache[{-460., 
                    Rational[53, 20000]}, {-460., 0.00265}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.00265]& , TagBoxNote -> "0.00265"], 
              StyleBox["0.00265`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00265, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-460., 0.}, 
                    NCache[{-458., 
                    Rational[11, 20000]}, {-458., 0.00055}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.00055]& , TagBoxNote -> "0.00055"], 
              StyleBox["0.00055`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00055, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-458., 0.}, 
                    NCache[{-456., 
                    Rational[1, 10000]}, {-456., 0.0001}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0001]& , TagBoxNote -> "0.0001"], 
              StyleBox["0.0001`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0001, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-454., 0.}, 
                    NCache[{-452., 
                    Rational[1, 20000]}, {-452., 0.00005}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.00005]& , TagBoxNote -> "0.00005"], 
              StyleBox["0.00005`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00005, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5389999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-472., 0.}, 
                    NCache[{-470., 
                    Rational[7, 10000]}, {-470., 0.0007}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0007]& , TagBoxNote -> "0.0007"], 
              StyleBox["0.0007`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0007, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-470., 0.}, 
                    NCache[{-468., 
                    Rational[237, 20000]}, {-468., 0.01185}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.01185]& , TagBoxNote -> "0.01185"], 
              StyleBox["0.01185`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.01185, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-468., 0.}, 
                    NCache[{-466., 
                    Rational[1101, 20000]}, {-466., 0.05505}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.05505]& , TagBoxNote -> "0.05505"], 
              StyleBox["0.05505`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.05505, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-466., 0.}, 
                    NCache[{-464., 
                    Rational[247, 2500]}, {-464., 0.0988}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0988]& , TagBoxNote -> "0.0988"], 
              StyleBox["0.0988`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0988, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-464., 0.}, 
                    NCache[{-462., 
                    Rational[2191, 20000]}, {-462., 0.10955}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.10955]& , TagBoxNote -> "0.10955"], 
              StyleBox["0.10955`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.10955, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-462., 0.}, 
                    NCache[{-460., 
                    Rational[489, 5000]}, {-460., 0.0978}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0978]& , TagBoxNote -> "0.0978"], 
              StyleBox["0.0978`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0978, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-460., 0.}, 
                    NCache[{-458., 
                    Rational[161, 2500]}, {-458., 0.0644}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0644]& , TagBoxNote -> "0.0644"], 
              StyleBox["0.0644`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0644, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-458., 0.}, 
                    NCache[{-456., 
                    Rational[141, 4000]}, {-456., 0.03525}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.03525]& , TagBoxNote -> "0.03525"], 
              StyleBox["0.03525`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.03525, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-456., 0.}, 
                    NCache[{-454., 
                    Rational[353, 20000]}, {-454., 0.01765}], 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.01765]& , TagBoxNote -> "0.01765"], 
              StyleBox["0.01765`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.01765, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-454., 0.}, 
                    NCache[{-452., 
                    Rational[67, 10000]}, {-452., 0.0067}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0067]& , TagBoxNote -> "0.0067"], 
              StyleBox["0.0067`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0067, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-452., 0.}, 
                    NCache[{-450., 
                    Rational[9, 5000]}, {-450., 0.0018}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0018]& , TagBoxNote -> "0.0018"], 
              StyleBox["0.0018`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0018, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-450., 0.}, 
                    NCache[{-448., 
                    Rational[7, 20000]}, {-448., 0.00035}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.00035]& , TagBoxNote -> "0.00035"], 
              StyleBox["0.00035`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00035, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{-448., 0.}, 
                    NCache[{-446., 
                    Rational[1, 10000]}, {-446., 0.0001}], "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, 
               StatusArea[#, 0.0001]& , TagBoxNote -> "0.0001"], 
              StyleBox["0.0001`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0001, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-488.84, 0.}, Frame -> True, FrameLabel -> {{
        FormBox["\"PDF\"", TraditionalForm], None}, {
        FormBox["\"log sampling weights\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-488., -446.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"all graphs\"", "\"connected graphs\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5389999999999999]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5389999999999999]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.97858`", ",", "0.678934`", ",", "0.157834`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[52]=",ExpressionUUID->"660ea4e8-e01c-4aaf-b952-a9f3e234e64d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{998, 905},
WindowMargins->{{68, Automatic}, {Automatic, 44}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"862fca7a-be81-49a5-8e26-3d259899e006"
]
