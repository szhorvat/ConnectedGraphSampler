Notebook[{

Cell[CellGroupData[{
Cell["Connected Graph Sampler", "Title",
 ExpressionUUID -> "dfb81096-b7cb-422e-8ce8-03e4ab656479"],

Cell[CellGroupData[{

Cell["Prerequisites", "Section",
 ExpressionUUID -> "d13901d1-b639-4bd9-b592-05dc87449da7"],

Cell[TextData[{
 "To use the ",
 StyleBox["ConnectedGraphSampler",
  FontWeight->"Bold"],
 " package, you need:"
}], "Text",
 ExpressionUUID -> "2bf05bb6-c9af-499e-9aa5-c174d43306b3"],

Cell[CellGroupData[{

Cell["Mathematica 10.0.2 or later.", "Item",
 ExpressionUUID -> "58e833b1-b88f-41cf-9b45-2776bc2c01db"],

Cell["A C++ compiler that supports the C++14 standard.", "Item",
 ExpressionUUID -> "06e829d5-a601-4b91-a572-cf93284591fd"],

Cell[TextData[{
 "The LTemplate package. See ",
 ButtonBox["https://github.com/szhorvat/LTemplate",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/szhorvat/LTemplate"], None},
  ButtonNote->"https://github.com/szhorvat/LTemplate"],
 " for installation instructions."
}], "Item",
 ExpressionUUID -> "d9708105-7fc6-46aa-84bf-f1212ab9f72d"]
}, Open  ]],

Cell["\<\
To check if Mathematica is already set up to use your installed C compiler, \
verify that the following does not return an empty list:\
\>", "Text",
 ExpressionUUID -> "56c780f7-a645-49bd-85bd-4e508ad59e04"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}], "\n", 
 RowBox[{"CCompilers", "[", "]"}]}], "Input",
 ExpressionUUID -> "e56e6310-1cd9-42de-a4cf-93e5d208e009"],

Cell["\<\
If LTemplate is correctly installed, evaluating the following will not result \
in any error messages:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<LTemplate`\>\"", "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting started", "Section",
 ExpressionUUID -> "099c8f58-58b2-4945-889d-1c30dab7051d"],

Cell["\<\
Add the package to the search path and load the package. The first time it is \
loaded, the C++ component will be automatically compiled. \
\>", "Text",
 ExpressionUUID -> "41d62106-ccc7-49b5-aa36-60d157230fb6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$packagePath", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<.\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"Not", "@", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"$Path", ",", "$packagePath"}], "]"}]}], ",", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"$Path", ",", "$packagePath"}], "]"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<ConnectedGraphSampler`\>\"", "]"}]}], "Input",
 ExpressionUUID -> "2318eba1-56ae-4983-8868-27f343e1b590"],

Cell["\<\
If compilation has failed, the most likely causes are: (1) The LTemplate \
package was not installed (2) No suitable C++ compiler is present on the \
system.\
\>", "Text",
 ExpressionUUID -> "74df72ae-2e46-46a7-ae2f-b7d0e39583c5"],

Cell[TextData[{
 "Use ",
 ButtonBox["?",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Information"],
 " to obtain information about the symbols provided by the package:"
}], "Text",
 ExpressionUUID -> "d6caa78c-c6ad-4000-bd80-40c9f0059f84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ConnectedGraphSampler`*"}]], "Input",
 ExpressionUUID -> "87fe3a23-7c32-4d7b-94ab-ceefe1f72fc0"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["ConnectedGraphSampler`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["ConnectedGraphSampler`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["CGSGraphicalQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3807285963-3809764", {
            "CGSGraphicalQ", "ConnectedGraphSampler`"}},
          ButtonNote->"ConnectedGraphSampler`"], 
         ButtonBox["CGSSample",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3807285963-3809764", {"CGSSample", "ConnectedGraphSampler`"}},
          
          ButtonNote->"ConnectedGraphSampler`"], 
         ButtonBox["Connected",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3807285963-3809764", {"Connected", "ConnectedGraphSampler`"}},
          
          ButtonNote->"ConnectedGraphSampler`"]},
        {
         ButtonBox["CGSPotentiallyConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3807285963-3809764", {
            "CGSPotentiallyConnectedQ", "ConnectedGraphSampler`"}},
          ButtonNote->"ConnectedGraphSampler`"], 
         ButtonBox["CGSSampleProp",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3807285963-3809764", {
            "CGSSampleProp", "ConnectedGraphSampler`"}},
          ButtonNote->"ConnectedGraphSampler`"], 
         ButtonBox["ConnectedGraphSampler",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3807285963-3809764", {
            "ConnectedGraphSampler", "ConnectedGraphSampler`"}},
          ButtonNote->"ConnectedGraphSampler`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CGSSample"}]], "Input",
 ExpressionUUID -> "720f1e01-eca4-4bc1-a839-9652e09bc9ca"],

Cell[BoxData[
 StyleBox["\<\"CGSSample[degrees] generates a biased sample from the set of \
graphs with the given degrees. The result is returned in the form {graph, \
Log[samplingWeight]}.\\nCGSSample[degrees, Connected -> True] samples only \
connected graphs.\\nCGSSample[degrees, n] generates n biased samples.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3807285965-3809764"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usage", "Section",
 ExpressionUUID -> "f64e25d2-3fbb-4ed0-944f-9b85faae02c8"],

Cell[CellGroupData[{

Cell["Basic usage", "Subsubsection",
 ExpressionUUID -> "c529d133-a50b-45f1-bc40-86abc22a5a8b"],

Cell[TextData[{
 "Create a single random graph with a given degree sequence. The function \
returns the result in the format ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"graph", ",", " ", 
    RowBox[{"Log", "[", "samplingWeight", "]"}]}], "}"}]],
  ExpressionUUID -> "d7f37963-d4df-4056-a825-c1b9f44101bc"],
 ". All standard graph styling options may be used."
}], "Text",
 ExpressionUUID -> "3137cdbf-cc76-4d6a-8d56-274738336d22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CGSSample", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"GraphStyle", "\[Rule]", "\"\<DiagramGold\>\""}], ",", 
   RowBox[{"VertexSize", "\[Rule]", "0.6"}]}], "]"}]], "Input",
 ExpressionUUID -> "fdf92a22-17c2-4b6d-a98b-452fce078afb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {3, 4}}}, {
        GraphStyle -> "DiagramGold", VertexSize -> {0.6}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Hue[0.7, 0.3, 0.7], 
          Thickness[Large], 
          Opacity[1]], 
         LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$2", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$5", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$6", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$2", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$2", Automatic, Center], 
           DynamicLocation["VertexID$4", Automatic, Center]}], 
         LineBox[{
           DynamicLocation["VertexID$3", Automatic, Center], 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {
         Directive[
          Hue[0.15, 0.5, 0.8], 
          EdgeForm[]], 
         TagBox[{
           TagBox[
            
            FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 
             1, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{2.0017422375618357`,
              0.5305699012137612}, {2.328393076939767, 0.5305699012137612}, {
             2.4100555785444127`, 0.5305699012137612}, {2.4100555785444127`, 
             0.6122326110582441}, {2.4100555785444127`, 0.7755580307472099}, {
             2.4100555785444127`, 0.8572207405916927}, {2.328393076939767, 
             0.8572207405916927}, {2.0017422375618357`, 0.8572207405916927}, {
             1.92007973595719, 0.8572207405916927}, {1.92007973595719, 
             0.7755580307472099}, {1.92007973595719, 0.6122326110582441}, {
             1.92007973595719, 0.5305699012137612}, {2.0017422375618357`, 
             0.5305699012137612}}}], "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            
            FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 
             1, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{0.7323899233443955, 
             0.5305776285103759}, {1.059040762722327, 0.5305776285103759}, {
             1.1407032643269726`, 0.5305776285103759}, {1.1407032643269726`, 
             0.6122403383548588}, {1.1407032643269726`, 0.7755657580438245}, {
             1.1407032643269726`, 0.8572284678883074}, {1.059040762722327, 
             0.8572284678883074}, {0.7323899233443955, 0.8572284678883074}, {
             0.6507274217397498, 0.8572284678883074}, {0.6507274217397498, 
             0.7755657580438245}, {0.6507274217397498, 0.6122403383548588}, {
             0.6507274217397498, 0.5305776285103759}, {0.7323899233443955, 
             0.5305776285103759}}}], "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["2", TraditionalForm], 
            DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 
             1, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
             2}}}, {{{-0.16332541968896575`, 0.18357954633055767`}, {
             0.16332541968896575`, 0.18357954633055767`}, {0.2449879212936114,
              0.18357954633055767`}, {0.2449879212936114, 
             0.26524225617504055`}, {0.2449879212936114, 
             0.4285676758640063}, {0.2449879212936114, 0.5102303857084891}, {
             0.16332541968896575`, 
             0.5102303857084891}, {-0.16332541968896575`, 
             0.5102303857084891}, {-0.2449879212936114, 
             0.5102303857084891}, {-0.2449879212936114, 
             0.4285676758640063}, {-0.2449879212936114, 
             0.26524225617504055`}, {-0.2449879212936114, 
             0.18357954633055767`}, {-0.16332541968896575`, 
             0.18357954633055767`}}}], "DynamicName", BoxID -> "VertexID$3"], 
           
           InsetBox[
            FormBox["3", TraditionalForm], 
            DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 
             1, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-0.163121229089789, 
             0.8777123070291699}, {0.1635296102881425, 0.8777123070291699}, {
             0.24519211189278817`, 0.8777123070291699}, {0.24519211189278817`,
              0.9593750168736528}, {0.24519211189278817`, 
             1.1227004365626185`}, {0.24519211189278817`, 
             1.2043631464071014`}, {0.1635296102881425, 
             1.2043631464071014`}, {-0.163121229089789, 
             1.2043631464071014`}, {-0.24478373069443465`, 
             1.2043631464071014`}, {-0.24478373069443465`, 
             1.1227004365626185`}, {-0.24478373069443465`, 
             0.9593750168736528}, {-0.24478373069443465`, 
             0.8777123070291699}, {-0.163121229089789, 0.8777123070291699}}}],
             "DynamicName", BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox["4", TraditionalForm], 
            DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            
            FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 
             1, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{2.7425385380982403`,
              1.2248184132407645`}, {3.069189377476172, 
             1.2248184132407645`}, {3.1508518790808173`, 
             1.2248184132407645`}, {3.1508518790808173`, 
             1.3064811230852473`}, {3.1508518790808173`, 1.469806542774213}, {
             3.1508518790808173`, 1.551469252618696}, {3.069189377476172, 
             1.551469252618696}, {2.7425385380982403`, 1.551469252618696}, {
             2.660876036493595, 1.551469252618696}, {2.660876036493595, 
             1.469806542774213}, {2.660876036493595, 1.3064811230852473`}, {
             2.660876036493595, 1.2248184132407645`}, {2.7425385380982403`, 
             1.2248184132407645`}}}], "DynamicName", BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox["5", TraditionalForm], 
            DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            
            FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 
             1, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
             2.7430364743566593`, -0.16332541968896575`}, {
             3.069687313734591, -0.16332541968896575`}, {
             3.1513498153392363`, -0.16332541968896575`}, {
             3.1513498153392363`, -0.08166270984448287}, {3.1513498153392363`,
              0.08166270984448287}, {3.1513498153392363`, 
             0.16332541968896575`}, {3.069687313734591, 
             0.16332541968896575`}, {2.7430364743566593`, 
             0.16332541968896575`}, {2.661373972752014, 
             0.16332541968896575`}, {2.661373972752014, 
             0.08166270984448287}, {
             2.661373972752014, -0.08166270984448287}, {
             2.661373972752014, -0.16332541968896575`}, {
             2.7430364743566593`, -0.16332541968896575`}}}], "DynamicName", 
            BoxID -> "VertexID$6"], 
           InsetBox[
            FormBox["6", TraditionalForm], 
            DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
            "Graphics"]}, "DynamicName", BoxID -> 
          "VertexLabelID$6"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{-0.2393066909899062, 
         178.2393066909899}, {-50.23930669098991, 44.2393066909899}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   RowBox[{"-", "7.677863500678211`"}]}], "}"}]], "Output",
 ExpressionUUID -> "7e32205c-a1d8-45b3-a82e-f456f0e9b922"]
}, Open  ]],

Cell["Sample 6 random graphs.", "Text",
 ExpressionUUID -> "852f44c1-4658-43a6-811f-d3376be54801"],

Cell[BoxData[
 RowBox[{
  RowBox[{"degseq", "=", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], ";"}]], "Input",
 ExpressionUUID -> "ddf2f056-855a-4c38-8986-596067831108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CGSSample", "[", 
  RowBox[{"degseq", ",", "6"}], "]"}]], "Input",
 ExpressionUUID -> "646773ba-d1d2-47d3-8dcd-fc3201d6fefe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 7}, {1, 8}, {1, 3}, {2, 9}, {2, 3}, {2, 4}, {4, 6}, {5, 
           10}, {5, 6}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.42111744380615784`, 1.6844697752246314`}, {
           1.4739110533215525`, 3.3689395504492627`}, {0.42111744380615784`, 
           2.526704662836947}, {1.6844697752246314`, 2.526704662836947}, {
           1.6844697752246314`, 0.8422348876123156}, {1.6844697752246314`, 
           1.6844697752246314`}, {0., 0.8422348876123156}, {
           0.8422348876123157, 0.8422348876123156}, {2.526704662836947, 
           2.526704662836947}, {1.6844697752246314`, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{1, 7}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{1, 8}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{2, 9}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{5, 10}, 0.032828104576223704`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.032828104576223704`], 
             DiskBox[2, 0.032828104576223704`], 
             DiskBox[3, 0.032828104576223704`], 
             DiskBox[4, 0.032828104576223704`], 
             DiskBox[5, 0.032828104576223704`], 
             DiskBox[6, 0.032828104576223704`], 
             DiskBox[7, 0.032828104576223704`], 
             DiskBox[8, 0.032828104576223704`], 
             DiskBox[9, 0.032828104576223704`], 
             DiskBox[10, 0.032828104576223704`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "16.21407469793021`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 5}, {1, 8}, {1, 9}, {2, 7}, {2, 3}, {2, 4}, {3, 6}, {4, 
           6}, {5, 10}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{2.553986081939422, -1.2348473594448428`}, {
           2.09703872898641, -3.533824533095206}, {
           1.2311816568146148`, -2.967317725864926}, {
           1.2309656378487803`, -4.1000962560666006`}, {
           1.4453334434820464`, -1.2348042983935152`}, {
           0.4974141926668749, -3.5335704249411135`}, {
           3.164984993147929, -3.533649456373451}, {
           3.1804567967898456`, -0.4974141926668749}, {
           3.180044781259453, -1.972489340531176}, {
           0.4974141926668749, -1.234810348782057}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{1, 8}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{3, 6}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.0344109836456748]}, 
             {Arrowheads[0.], ArrowBox[{5, 10}, 0.0344109836456748]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.0344109836456748], DiskBox[2, 0.0344109836456748], 
             DiskBox[3, 0.0344109836456748], DiskBox[4, 0.0344109836456748], 
             DiskBox[5, 0.0344109836456748], DiskBox[6, 0.0344109836456748], 
             DiskBox[7, 0.0344109836456748], DiskBox[8, 0.0344109836456748], 
             DiskBox[9, 0.0344109836456748], 
             DiskBox[10, 0.0344109836456748]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "16.534381997698066`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 8}, {1, 4}, {1, 3}, {2, 7}, {2, 3}, {2, 5}, {4, 9}, {5, 
           6}, {6, 10}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.43301270189221935`, 2.598076211353316}, {
           2.165063509461097, 2.598076211353316}, {1.299038105676658, 
           3.464101615137755}, {0., 1.7320508075688774`}, {
           1.7320508075688774`, 1.7320508075688774`}, {1.7320508075688774`, 
           0.8660254037844388}, {2.598076211353316, 1.7320508075688774`}, {
           0.8660254037844387, 1.7320508075688774`}, {0., 
           0.8660254037844388}, {1.7320508075688774`, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{1, 8}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{2, 5}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{4, 9}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.03347773481857537]}, 
             {Arrowheads[0.], ArrowBox[{6, 10}, 0.03347773481857537]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.03347773481857537], DiskBox[2, 0.03347773481857537],
              DiskBox[3, 0.03347773481857537], 
             DiskBox[4, 0.03347773481857537], DiskBox[5, 0.03347773481857537],
              DiskBox[6, 0.03347773481857537], 
             DiskBox[7, 0.03347773481857537], DiskBox[8, 0.03347773481857537],
              DiskBox[9, 0.03347773481857537], 
             DiskBox[10, 0.03347773481857537]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "16.357175541570882`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 10}, {1, 3}, {1, 5}, {2, 3}, {2, 7}, {2, 4}, {4, 5}, {6, 
           9}, {6, 8}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{3.4132776039691626`, -1.2568434675491338`}, {
           1.407725011976279, -1.2567129857367934`}, {
           2.409730304414836, -1.5942464206960834`}, {
           1.933106278165684, -0.4431273397914097}, {
           2.8880466317146727`, -0.4428605252219173}, {
           1.4421712816797778`, -2.4799674711399176`}, {
           0.4428605252219171, -1.4941911348515378`}, {
           2.4428600504923486`, -2.479967471139921}, {
           0.4428605252219171, -2.479967471139921}, {
           4.377083508027991, -1.4946110775736308`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{1, 10}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{4, 5}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{6, 8}, 0.036584172041486396`]}, 
             {Arrowheads[0.], ArrowBox[{6, 9}, 0.036584172041486396`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.036584172041486396`], 
             DiskBox[2, 0.036584172041486396`], 
             DiskBox[3, 0.036584172041486396`], 
             DiskBox[4, 0.036584172041486396`], 
             DiskBox[5, 0.036584172041486396`], 
             DiskBox[6, 0.036584172041486396`], 
             DiskBox[7, 0.036584172041486396`], 
             DiskBox[8, 0.036584172041486396`], 
             DiskBox[9, 0.036584172041486396`], 
             DiskBox[10, 0.036584172041486396`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "16.357175541570882`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 3}, {1, 5}, {1, 8}, {2, 5}, {2, 4}, {2, 7}, {3, 4}, {6, 
           9}, {6, 10}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{3.4129408129411773`, -1.257396475779038}, {
           1.4074900516213218`, -1.2563193412165732`}, {
           2.8903139651465057`, -0.4427973630666975}, {
           1.933702334218992, -0.44322908487699486`}, {
           2.409183157744409, -1.5938804544382261`}, {
           1.442108119524558, -2.4794751805716206`}, {
           0.4427973630666975, -1.4942857535234477`}, {
           4.376312555491894, -1.4955891290145902`}, {
           2.4427968883371287`, -2.479475180571624}, {
           0.44279736306669726`, -2.479475180571624}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{1, 8}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{2, 5}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{3, 4}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{6, 9}, 0.03657961965183566]}, 
             {Arrowheads[0.], ArrowBox[{6, 10}, 0.03657961965183566]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.03657961965183566], DiskBox[2, 0.03657961965183566],
              DiskBox[3, 0.03657961965183566], 
             DiskBox[4, 0.03657961965183566], DiskBox[5, 0.03657961965183566],
              DiskBox[6, 0.03657961965183566], 
             DiskBox[7, 0.03657961965183566], DiskBox[8, 0.03657961965183566],
              DiskBox[9, 0.03657961965183566], 
             DiskBox[10, 0.03657961965183566]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "16.041905512600273`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 4}, {1, 2}, {1, 10}, {2, 3}, {2, 6}, {3, 8}, {4, 5}, {5, 
           6}, {7, 9}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.1271290902786228`, -1.3289804159452276`}, {
           2.146167795197102, -1.881548179234093}, {
           3.3049158157341605`, -1.7998466693435555`}, {
           0.44908162959559017`, -2.0300249367815404`}, {
           0.6923550949493564, -2.8503672193313556`}, {
           1.5781924831112326`, -2.710573972366471}, {
           1.44908162959559, -3.7485304785225355`}, {
           4.232942113389265, -1.7411674387364002`}, {
           0.44908162959558995`, -3.7485304785225355`}, {
           0.7142441571876128, -0.44908162959558995`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{1, 10}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{2, 6}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{4, 5}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.035608787495538446`]}, 
             {Arrowheads[0.], ArrowBox[{7, 9}, 0.035608787495538446`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.035608787495538446`], 
             DiskBox[2, 0.035608787495538446`], 
             DiskBox[3, 0.035608787495538446`], 
             DiskBox[4, 0.035608787495538446`], 
             DiskBox[5, 0.035608787495538446`], 
             DiskBox[6, 0.035608787495538446`], 
             DiskBox[7, 0.035608787495538446`], 
             DiskBox[8, 0.035608787495538446`], 
             DiskBox[9, 0.035608787495538446`], 
             DiskBox[10, 0.035608787495538446`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "16.611571636389197`"}]}], "}"}]}], "}"}]], "Output",
 ExpressionUUID -> "4351b982-d8b3-44da-8f61-fbff510b6a52"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Connected graphs", "Subsubsection",
 ExpressionUUID -> "be8124fb-6b4e-4a7e-a7d1-3a2197ad55c8"],

Cell[TextData[{
 "Sample 6 ",
 StyleBox["connected",
  FontSlant->"Italic"],
 " graphs with the same degree sequence."
}], "Text",
 ExpressionUUID -> "8af9e93c-fa03-46a7-9c89-2bdf7cccf107"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CGSSample", "[", 
  RowBox[{"degseq", ",", "6", ",", 
   RowBox[{"Connected", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "c6484b90-3586-4868-933f-7ed8416eb93b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 3}, {1, 6}, {1, 5}, {2, 10}, {2, 4}, {2, 7}, {3, 9}, {4, 
           6}, {5, 8}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.43301270189221935`, 1.7320508075688772`}, {
           2.165063509461097, 0.8660254037844386}, {0., 0.8660254037844386}, {
           2.165063509461097, 1.7320508075688772`}, {0.8660254037844387, 
           0.8660254037844386}, {1.299038105676658, 2.598076211353316}, {
           1.7320508075688774`, 0.}, {0.8660254037844387, 0.}, {0., 0.}, {
           2.598076211353316, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{2, 10}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{3, 9}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.027286130334401623`]}, 
             {Arrowheads[0.], ArrowBox[{5, 8}, 0.027286130334401623`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.027286130334401623`], 
             DiskBox[2, 0.027286130334401623`], 
             DiskBox[3, 0.027286130334401623`], 
             DiskBox[4, 0.027286130334401623`], 
             DiskBox[5, 0.027286130334401623`], 
             DiskBox[6, 0.027286130334401623`], 
             DiskBox[7, 0.027286130334401623`], 
             DiskBox[8, 0.027286130334401623`], 
             DiskBox[9, 0.027286130334401623`], 
             DiskBox[10, 0.027286130334401623`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "15.531079888834283`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 3}, {1, 5}, {1, 2}, {2, 10}, {2, 6}, {3, 9}, {4, 6}, {4, 
           8}, {5, 7}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.42111744380615784`, 1.6844697752246316`}, {
           1.4739110533215525`, 2.526704662836947}, {0., 
           0.8422348876123158}, {1.6844697752246314`, 0.8422348876123158}, {
           0.8422348876123157, 0.8422348876123158}, {1.6844697752246314`, 
           1.6844697752246316`}, {0.8422348876123157, 0.}, {
           1.6844697752246314`, 0.}, {0., 0.}, {2.526704662836947, 
           1.6844697752246316`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{2, 6}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{2, 10}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{3, 9}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{4, 8}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{5, 7}, 0.026746385568939296`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.026746385568939296`], 
             DiskBox[2, 0.026746385568939296`], 
             DiskBox[3, 0.026746385568939296`], 
             DiskBox[4, 0.026746385568939296`], 
             DiskBox[5, 0.026746385568939296`], 
             DiskBox[6, 0.026746385568939296`], 
             DiskBox[7, 0.026746385568939296`], 
             DiskBox[8, 0.026746385568939296`], 
             DiskBox[9, 0.026746385568939296`], 
             DiskBox[10, 0.026746385568939296`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "15.385125976211203`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 2}, {1, 10}, {1, 3}, {2, 6}, {2, 5}, {3, 4}, {4, 8}, {5, 
           7}, {6, 9}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.4739110533215525`, 2.526704662836947}, {
           0.42111744380615784`, 1.6844697752246316`}, {1.6844697752246314`, 
           1.6844697752246316`}, {1.6844697752246314`, 0.8422348876123158}, {
           0., 0.8422348876123158}, {0.8422348876123157, 
           0.8422348876123158}, {0., 0.}, {1.6844697752246314`, 0.}, {
           0.8422348876123157, 0.}, {2.526704662836947, 
           1.6844697752246316`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{1, 10}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{2, 5}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{2, 6}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{3, 4}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{4, 8}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{5, 7}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{6, 9}, 0.026746385568939296`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.026746385568939296`], 
             DiskBox[2, 0.026746385568939296`], 
             DiskBox[3, 0.026746385568939296`], 
             DiskBox[4, 0.026746385568939296`], 
             DiskBox[5, 0.026746385568939296`], 
             DiskBox[6, 0.026746385568939296`], 
             DiskBox[7, 0.026746385568939296`], 
             DiskBox[8, 0.026746385568939296`], 
             DiskBox[9, 0.026746385568939296`], 
             DiskBox[10, 0.026746385568939296`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "15.135184231742269`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 6}, {1, 7}, {1, 2}, {2, 5}, {2, 8}, {3, 5}, {3, 10}, {4, 
           6}, {4, 9}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.4739110533215525`, 3.3689395504492627`}, {
           0.42111744380615784`, 2.526704662836947}, {0., 
           0.8422348876123156}, {1.6844697752246314`, 1.6844697752246314`}, {
           0., 1.6844697752246314`}, {1.6844697752246314`, 
           2.526704662836947}, {2.526704662836947, 2.526704662836947}, {
           0.8422348876123157, 1.6844697752246314`}, {1.6844697752246314`, 
           0.8422348876123156}, {0., 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{1, 7}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{2, 5}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{2, 8}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{3, 5}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{3, 10}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.032828104576223704`]}, 
             {Arrowheads[0.], ArrowBox[{4, 9}, 0.032828104576223704`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.032828104576223704`], 
             DiskBox[2, 0.032828104576223704`], 
             DiskBox[3, 0.032828104576223704`], 
             DiskBox[4, 0.032828104576223704`], 
             DiskBox[5, 0.032828104576223704`], 
             DiskBox[6, 0.032828104576223704`], 
             DiskBox[7, 0.032828104576223704`], 
             DiskBox[8, 0.032828104576223704`], 
             DiskBox[9, 0.032828104576223704`], 
             DiskBox[10, 0.032828104576223704`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "15.77224194565117`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 2}, {1, 4}, {1, 6}, {2, 9}, {2, 5}, {3, 10}, {3, 6}, {4, 
           8}, {5, 7}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{1.4739110533215525`, 2.526704662836947}, {
           0.42111744380615784`, 1.6844697752246316`}, {2.526704662836947, 
           0.8422348876123158}, {1.6844697752246314`, 1.6844697752246316`}, {
           0., 0.8422348876123158}, {2.526704662836947, 
           1.6844697752246316`}, {0., 0.}, {1.6844697752246314`, 
           0.8422348876123158}, {0.8422348876123157, 0.8422348876123158}, {
           2.526704662836947, 0.}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{2, 5}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{2, 9}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{3, 6}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{3, 10}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{4, 8}, 0.026746385568939296`]}, 
             {Arrowheads[0.], ArrowBox[{5, 7}, 0.026746385568939296`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.026746385568939296`], 
             DiskBox[2, 0.026746385568939296`], 
             DiskBox[3, 0.026746385568939296`], 
             DiskBox[4, 0.026746385568939296`], 
             DiskBox[5, 0.026746385568939296`], 
             DiskBox[6, 0.026746385568939296`], 
             DiskBox[7, 0.026746385568939296`], 
             DiskBox[8, 0.026746385568939296`], 
             DiskBox[9, 0.026746385568939296`], 
             DiskBox[10, 0.026746385568939296`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "15.104412573075514`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 9}, {1, 4}, {1, 2}, {2, 3}, {2, 10}, {3, 8}, {4, 5}, {5, 
           6}, {6, 7}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.8994380267950337, 2.698314080385101}, {
           0.44971901339751685`, 1.7988760535900674`}, {0., 
           0.8994380267950337}, {1.574016546891309, 3.597752107180135}, {
           2.2485950669875843`, 2.698314080385101}, {2.2485950669875843`, 
           1.7988760535900674`}, {2.2485950669875843`, 0.8994380267950337}, {
           0., 0.}, {1.3491570401925506`, 1.7988760535900674`}, {
           0.8994380267950337, 0.8994380267950337}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{2, 10}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{4, 5}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.03437804012870442]}, 
             {Arrowheads[0.], ArrowBox[{6, 7}, 0.03437804012870442]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.03437804012870442], DiskBox[2, 0.03437804012870442],
              DiskBox[3, 0.03437804012870442], 
             DiskBox[4, 0.03437804012870442], DiskBox[5, 0.03437804012870442],
              DiskBox[6, 0.03437804012870442], 
             DiskBox[7, 0.03437804012870442], DiskBox[8, 0.03437804012870442],
              DiskBox[9, 0.03437804012870442], 
             DiskBox[10, 0.03437804012870442]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]]], ",", 
     RowBox[{"-", "15.846349917804893`"}]}], "}"}]}], "}"}]], "Output",
 ExpressionUUID -> "5ea21327-9264-46fa-a4fb-f36227feba57"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating samples of numerical graph properties", "Subsubsection",
 ExpressionUUID -> "aa70f17f-96d3-4928-88da-ced9f1b45832"],

Cell[TextData[{
 "Sample 1000 graphs and compute their assortativity. The result is returned \
as a ",
 ButtonBox["WeightedData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WeightedData"],
 " expression:"
}], "Text",
 ExpressionUUID -> "cfe9b348-58d0-4f65-a57b-f0e2d1a4c267"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sample", "=", 
  RowBox[{"CGSSampleProp", "[", 
   RowBox[{"degseq", ",", "GraphAssortativity", ",", "1000"}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "292f12d3-8f7f-4582-93fc-f343a11a446a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["WeightedData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, 
            GraphicsComplexBox[{{-3.1, 1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 
             1.}, {-3.1, 0.}, {-0.5, 0.}, {1.25, 0.}, {3.25, 0.}, {-3.1, 
             1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 1.}}, {{{}, {}, {}, {}, 
               {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.6], 
                Opacity[0.5], LineBox[{5, 1}], LineBox[{6, 2}], 
                LineBox[{7, 3}], LineBox[{8, 4}]}}, {{}, 
               {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.6], 
                PointBox[{9, 10, 11, 12}]}, {}}}], {}}, 
           GraphicsComplexBox[CompressedData["
1:eJw1k31Qy3Ecx7e16VGcSrg8VEMTy6EH5D5fKpqHEtGycNVZpFN6IDqa9Hgk
T+eq9XBajpSHVkkP+v6StFbpQU0PaDWnqbC1mrpp4U7vu/e973Xvv1+WAaEH
TlBIJNKmv/23TFg4PDMzjxhuSuvUhJdApZ7/maAaYwIp6WS/2xUQ2yIZqfWf
SyxgM5bxpwn49mCxuaOFEbGdFuNy62s9rOl315/3yYDwcUgwkouaIN9EMN4T
p0+ExZ+bP/9NO9RxxKkY9Ah3O3737kUSsMi1WJE+MIfws2P8BkEf7HHhXHif
QiOWHfSuK5uRwnINl8dgUQkTfpRYGvgF1j3N5oV/pxBeN7lBO5LlII28z5Q8
IhMtQlb3RPsonMq6JcgKJhE1AhNGTLEC2Jd9rYustFgdHxTAZavAZoTB8c7R
YOea2xmRYxNw2mN/wqBsEvdusKqK6J2EIxGe2xwc1NjPrq26pVIDd7B8P36h
wsWlbdMBx7QAlO7DTLISs41C1jWmklBw9+uwB6pR/G6X3yVNNRk5Z1xZVBk9
hMeemqUsGaCgk5+Ufb7mg3hjZnFyaLsO8pSufSKi92JTN2+nLB4VOWD+h+H4
d7gjt+zAVQoNbVYcDfwcWIqr6g0VjkBDtld/GhBRJXByY+PE17/8rOFHQSy7
Faa/FbwRaanoFUvstOV1DwxH38zdl0hFI4/zTnmwB0Fpwzzu2qCDsp8w+eNl
Q3DJrs/evYuCqv0TzdaXj4Jh/zafEDEZXTTN6PJcoIQbQ4dkQQkk1NzW6dqR
qQJhsJckIEYLZ5scV6UtVENRxPrxvI8ayG91NeOKJkFRI26e+jUJ14vKH+nu
1YA3Pa7AiaUG8p1OVh1NC4v1dX49j1KBeUFhQ747CR0tPW5wZEwBkoc8a1oy
GR32vBwauvM7cArXJIYPUtA1ceR0Y6EcnPm6W+tXUtHoStk5pvgLyNIq1PR4
Gsp9KLRdazwApdaxI5Yf5yB7c06XS1UfSAXnN1CX6qGkpJKxvEwJdNi48VTR
+kjeke3jIWuH5ZluK0SvDJB9DpyIC2mGe499pzb/NkT9H9hewrC38B7v6Hl5
aC6itgr3xq6uhdO1xwyXphujlmL63e3cSvjvA5r1YdYP0v/M/rP8BxJlmIA=

            "], {{{}, 
              {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.2], EdgeForm[
               None], GraphicsGroupBox[
                PolygonBox[{{1, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 42, 
                 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
                 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
                 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
              {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.5], 
               LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
                47, 48, 49, 50}]}}}]},
          AspectRatio->1,
          Axes->False,
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          Background->GrayLevel[0.93],
          DisplayFunction->Identity,
          Frame->True,
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798]]}, 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.880722, 0.611041, 0.142051]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.560181, 0.691569, 0.194885]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.772079, 0.431554, 0.102387]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.363898, 0.618501, 0.782349]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.647624, 0.37816, 0.614037]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.571589, 0.586483, 0.]]}, "RangePadding" -> 
            Scaled[0.1]},
          PlotRange->All,
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.5}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1000",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, 
            GraphicsComplexBox[{{-3.1, 1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 
             1.}, {-3.1, 0.}, {-0.5, 0.}, {1.25, 0.}, {3.25, 0.}, {-3.1, 
             1.}, {-0.5, 1.}, {1.25, 1.}, {3.25, 1.}}, {{{}, {}, {}, {}, 
               {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.6], 
                Opacity[0.5], LineBox[{5, 1}], LineBox[{6, 2}], 
                LineBox[{7, 3}], LineBox[{8, 4}]}}, {{}, 
               {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.6], 
                PointBox[{9, 10, 11, 12}]}, {}}}], {}}, 
           GraphicsComplexBox[CompressedData["
1:eJw1k31Qy3Ecx7e16VGcSrg8VEMTy6EH5D5fKpqHEtGycNVZpFN6IDqa9Hgk
T+eq9XBajpSHVkkP+v6StFbpQU0PaDWnqbC1mrpp4U7vu/e973Xvv1+WAaEH
TlBIJNKmv/23TFg4PDMzjxhuSuvUhJdApZ7/maAaYwIp6WS/2xUQ2yIZqfWf
SyxgM5bxpwn49mCxuaOFEbGdFuNy62s9rOl315/3yYDwcUgwkouaIN9EMN4T
p0+ExZ+bP/9NO9RxxKkY9Ah3O3737kUSsMi1WJE+MIfws2P8BkEf7HHhXHif
QiOWHfSuK5uRwnINl8dgUQkTfpRYGvgF1j3N5oV/pxBeN7lBO5LlII28z5Q8
IhMtQlb3RPsonMq6JcgKJhE1AhNGTLEC2Jd9rYustFgdHxTAZavAZoTB8c7R
YOea2xmRYxNw2mN/wqBsEvdusKqK6J2EIxGe2xwc1NjPrq26pVIDd7B8P36h
wsWlbdMBx7QAlO7DTLISs41C1jWmklBw9+uwB6pR/G6X3yVNNRk5Z1xZVBk9
hMeemqUsGaCgk5+Ufb7mg3hjZnFyaLsO8pSufSKi92JTN2+nLB4VOWD+h+H4
d7gjt+zAVQoNbVYcDfwcWIqr6g0VjkBDtld/GhBRJXByY+PE17/8rOFHQSy7
Faa/FbwRaanoFUvstOV1DwxH38zdl0hFI4/zTnmwB0Fpwzzu2qCDsp8w+eNl
Q3DJrs/evYuCqv0TzdaXj4Jh/zafEDEZXTTN6PJcoIQbQ4dkQQkk1NzW6dqR
qQJhsJckIEYLZ5scV6UtVENRxPrxvI8ayG91NeOKJkFRI26e+jUJ14vKH+nu
1YA3Pa7AiaUG8p1OVh1NC4v1dX49j1KBeUFhQ747CR0tPW5wZEwBkoc8a1oy
GR32vBwauvM7cArXJIYPUtA1ceR0Y6EcnPm6W+tXUtHoStk5pvgLyNIq1PR4
Gsp9KLRdazwApdaxI5Yf5yB7c06XS1UfSAXnN1CX6qGkpJKxvEwJdNi48VTR
+kjeke3jIWuH5ZluK0SvDJB9DpyIC2mGe499pzb/NkT9H9hewrC38B7v6Hl5
aC6itgr3xq6uhdO1xwyXphujlmL63e3cSvjvA5r1YdYP0v/M/rP8BxJlmIA=

            "], {{{}, 
              {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.2], EdgeForm[
               None], GraphicsGroupBox[
                PolygonBox[{{1, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 42, 
                 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
                 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
                 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
              {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.5], 
               LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
                47, 48, 49, 50}]}}}]},
          AspectRatio->1,
          Axes->False,
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          Background->GrayLevel[0.93],
          DisplayFunction->Identity,
          Frame->True,
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {{
               Directive[
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798]]}, 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.880722, 0.611041, 0.142051]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.560181, 0.691569, 0.194885]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.772079, 0.431554, 0.102387]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.363898, 0.618501, 0.782349]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.647624, 0.37816, 0.614037]], 
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0.571589, 0.586483, 0.]]}, "RangePadding" -> 
            Scaled[0.1]},
          PlotRange->All,
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.5}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1000",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Weight type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"numeric list\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  WeightedData[Automatic, {{
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-37, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[13, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[13, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[13, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-37, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[13, 22], 
     Rational[-7, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[13, 22], 
     Rational[-5, 22], 
     Rational[13, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[17, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[-37, 44], 
     Rational[-5, 22], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[13, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-37, 44], 
     Rational[-1, 44], 
     Rational[17, 44], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[-19, 44], 
     Rational[-19, 44], 
     Rational[-5, 22], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[-7, 11], 
     Rational[-1, 44], 
     Rational[2, 11], 
     Rational[2, 11], 
     Rational[-5, 22], 
     Rational[-5, 22], 
     Rational[2, 11], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[17, 44], 
     Rational[-1, 44], 
     Rational[-19, 44], 
     Rational[-7, 11], 
     Rational[-19, 44], 
     Rational[-1, 44]}, CompressedData["
1:eJx12Q2QlWUVB/AlATFhjEJJ42uVhMABHILIgDecGGMGKWgKUEc+GixIJJLG
UBhbIFQImoHQsShEC4d0C9pSEphgBYwPRT6WC9xddu9+glACUmPBWNw77+/Z
medOd3b2znvv83HO//zP/5znuaXT50yY0aakpOT0NSUlq5/Pv04kXduO+kTb
UXVJTZdtaxc915BU9PjJ2fFbTiVDux8d1f1oLhn8+WNP7flPXbL76v93J7Uk
XUeP7zJ6fGNycFR+QGMyb/rKsQPvP5HsaFi/ZNMjuSQ5/vac0qmNSZcJpTdO
KG1KOnTOv3Jhvff/m3/VJj3XPFb5lx2t860/6Nkr0/cOPJbc/WSfV5pW5JLh
7Q9ffrS8vuj9lod33vTwzuYw/9rUj7/O7fbW3G6Z5JuFVy756FtvfOGFsdXJ
7gG9hq5ZWp10uLy55+XNtcEP6x14t1PN1b/kns+c/lPZuGxSljen58lk3u6J
C3ZPrEteeWDfbx/Y1xRwWtEy/9ct808FHCZlX5udfa0meX3f0ts2jMiF9eHB
Xnjzv2sellE1yZ52Gy6OG5YJ8+zbkK6/bsbkZ2dMbg5+wRFOOz4YfvCD4dlk
3YaZv9gw82QRXjEecZzY1WnKhRunXGhKzv/g8uKOa2qSr+/c/7kffbEp+C/O
+AOvbbPzADQHeyYOXL99yb/qk0t5sw42JFurSx996kBN8sbNFx7a9ctcGH9X
u4Ev1zUdDXjAkR14Iz7w/+HCssrDxzLJh1sqltRcORae2cPe1xtv/+yOmvrw
/dMpjv07vjmo45t1gT+rC7i9F3Bh96ECL2tDnGKc7MM++QO3zkunfXrptOPJ
9h1Hyv89rTVO7xTezwZ74RbsSfH13H9w/tUQ8N+1a80/OvVtCHZMXpAnTEsy
fsmVIV+alQt2wf22qeU//vPHmgNf8dE6eCJu9xbWywQ87l7//qYFG04FXq7t
PWZV7zH1RfmxrvBeFXj1QsGPM2E8e/ktvvAVH/5cU/6bn7aMrQt+sBMO4nN9
j1znHrlWvZBH7ILLOwfyr8bk7JDrRi5/sCHEA4/EFz/hxS/+4pV9Yh0tqaj8
2uiW48Eu4zeO/tuUipeOhXXEhf7RnZVVF/d0uP1ksrTL7+/JPd6Y3Fx+6Jby
QydD3ssT49d+51z9Pw9mg590wL7yC4708LphZZ8aVtaKA1zhAz/7Ws/nzXtn
zf9224bw7vNxJzObvjwyE/bDK/VA/OGAL+bjO//5W9uvpeTipJrw7F0+exYv
vHom4qu83Jjqkfyd3Gt7kumXbY3HY/lXS8gDuMDZu/nijuf0zjz24JX435mH
55PvBf/l/drNyzPJnLqQD6H+vZUvdOdC/tgnXkfc6Ak/+PeHyrK5s++oDnol
LvzB38r72nyv3atVYZz86NlhUa8Oi+pC3YPHlMXLOw0YejrUnZA/qV8Pbt65
u33XbLAHT/gDP/6Kk2dxsg+98jkeGM8++cm/ISMW3/GN+pown394wr7MsJUN
V/8C/+Atb/jDX3pOn/bce+esD7ONIQ7sYwdeyCM4sevpiX+s6NG7rqge0AX5
H+ujfXwv7yuaBz1Uu7UqjIOP+asvjVl3aUxtUd2V//zHMzwWv7j/wEN9jPoH
T98b36+Qz6eDjkxp333k9mUnQn7F/as6Ro/Fxfpx3OkmvPFNH2Y8nYj9s455
4rTx+yM+nnmplTdx3aZT+tRDfRYevvrXinuhPjSHOigfjYeLPo593uWz+Knb
4iQ/Qh+e5i8+dE/zPTfryJM/61afLMsOrv5dnxPBf30SvON18c14eqD+w0F+
Wa9dwf7TRf04HIKuLPzuqzesaO1r1G28omvm24+d1o/PCfq2OK7e4UuH4zoZ
96Nwe+LFvste7FsfzjX25fe4wv5VgT/4yl54ehb/WJfpKz5PbWqz966Jp0Ke
ijcdsK840BG40hu6G/M5xj3ON/vBj11w23KV5TeV1ob96a56J07yzf7yE9/Y
KV/Ni+so3Ok0PbauekYX4Cze/JYv+OgcqA7xhz3iF+eheMf6iBfmO69+dVwe
oDNF67JXX1W5Nf/KFukzfsDPuvQFDubLA/WC3vAPjuIp/vAOfXykC+zSh/uc
bsOZXvy/PpT98gBu8FR/4aafVsfZaV38s799nD/UIfarQ3H9wFe8sU91YdyR
gDd9xAN4x/lOj+UlnOiWfZ2zxBn+xssT68BLfNUl/sbnyHCuSvsU+oJ3cOPH
vGuvr3p+4KmifPR9OD+l68EJLnhl/sxUX+UfHuK/dayrr4vtv6+A29+Lzl/m
03E6Ries89GvHnn7huWNIb76bZ8bH9/fwBNvQ7+Rjoe78w6dLim8zod57MVH
+cw+fvB3wMt1TV22teatODlv4W+Im3EpH5wjveu3+C1u7jf2p/2H/fEZ/+QZ
f863//kz/WuyQdf0T/TFOPpNZ+HJHnVf3xJ4lfpDp9Vx+Ygv8pk/8osdcPd5
nI/wC/08PUtxFGd2xvdVTxTifjTosH2+kt6/8iM+1/geDnRLXqg7+BLfXzkX
0w3z1X3nduuFfi7lp/XZixf6WLyWz+oIvMN9Z4q7Zzob3+voD+DGH/o+fFXe
oTNF9wjuu/Q96pU49k15NuHWc4PvfzwT+CP+eAc39uJnnFf6IjzTT5jn/OOe
kc7H/RJ+8hcOvpc3eIU/7BYn/sJV3RFX/oU6n+p3rMf4TYfxw3lMn6suxH2B
uo5Hq9J9xIsd8TmS/+Kn/7RO3EeJhz6T/eIKB7qGP85jvmcP++hHfP8b7vHS
eupzfSX/2em84X4AfvDlf3yf79l6+Op7dod7gRRvdrAr1Is0f/CY/XFfLI72
oUfiDXf7u0+If0/RzxkX3xexC774pS+VR+ygq/CU5/E5M9YdecN/OoDXdIi9
dFZc4t8t4nsH69Mr/SicxY/fZwo6cCT47zwOR+Odu9XRIn1M4909+tx89SM+
97Ej7qvdV/Mv9FvpM97LM+dROFkn7ned4/Wh+qn90X2keOERvokXfroPpafy
xPlDnqmD8l2cfI73nt2P8xdO5llX3yaP6TEes9OzOqGP1r/js7i5J45/T8Q/
fXH4fS7lHzvED7/EXb6oI+q2fKSDcX4GfKPfeZyz7CvedEF/GHQn9Ud89UPy
TH20Ll7uzdN39tngB/v063RfXNR1/Ax9nvun1F51Fn546hyBz8b9Dy0WHjo=

    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ExpressionUUID -> "398bddd2-3db7-42e7-b506-ed948d46016c"]
}, Open  ]],

Cell["Compute the mean the standard deviation of the sample:", "Text",
 ExpressionUUID -> "ab3c5e7f-ca63-455f-9682-fe56786d6d2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "sample", "]"}], ",", 
   RowBox[{"StandardDeviation", "[", "sample", "]"}]}], "}"}]], "Input",
 ExpressionUUID -> "cf28a8ac-ab1c-466c-a17f-ea25fa250d6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.17462685765151015`"}], ",", "0.28960866622488657`"}], 
  "}"}]], "Output",
 ExpressionUUID -> "3661e759-8af3-4986-b225-0951ebdb9236"]
}, Open  ]],

Cell["Plot the histogram of assortativity values:", "Text",
 ExpressionUUID -> "afa409f8-4b16-4de5-afb2-776ccd99c9c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "sample", "]"}]], "Input",
 ExpressionUUID -> "419efb9f-b989-4bae-ab44-843b3fe0c3d1"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.644], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.644], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-1., 0}, {-0.8, 4.038548752834473}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{26.254403522818222`, 67.4069255404323}, {
          85.84216870328294, 91.93456273819314}}],
        StatusArea[#, 4.038548752834473]& ,
        TagBoxNote->"4.038548752834473"],
       StyleBox["4.038548752834473`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4.038548752834473, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.8, 0}, {-0.6, 56.98261904761911}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{66.9069255404323, 108.0594475580464}, {
          12.527688423055622`, 91.93456273819314}}],
        StatusArea[#, 56.98261904761911]& ,
        TagBoxNote->"56.98261904761911"],
       StyleBox["56.98261904761911`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[56.98261904761911, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.6, 0}, {-0.4, 109.33947530864205`}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{107.5594475580464, 
          148.71196957566048`}, {-59.97364523926356, 91.93456273819314}}],
        StatusArea[#, 109.33947530864205`]& ,
        TagBoxNote->"109.33947530864205"],
       StyleBox["109.33947530864205`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[109.33947530864205`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.4, 0}, {-0.2, 140.61418115394318`}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{148.21196957566048`, 
          189.36449159327458`}, {-103.28139986029626`, 91.93456273819314}}],
        StatusArea[#, 140.61418115394318`]& ,
        TagBoxNote->"140.61418115394318"],
       StyleBox["140.61418115394318`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[140.61418115394318`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.2, 0}, {0., 123.6821378180903}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{188.86449159327458`, 
          230.01701361088865`}, {-79.83469562432401, 91.93456273819314}}],
        StatusArea[#, 123.6821378180903]& ,
        TagBoxNote->"123.6821378180903"],
       StyleBox["123.6821378180903`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[123.6821378180903, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0., 0}, {0.2, 74.43391534391543}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{229.51701361088865`, 
          270.66953562850273`}, {-11.638053104853569`, 91.93456273819314}}],
        StatusArea[#, 74.43391534391543]& ,
        TagBoxNote->"74.43391534391543"],
       StyleBox["74.43391534391543`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[74.43391534391543, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.2, 0}, {0.4, 27.869425547997007`}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{270.16953562850273`, 311.32205764611683`}, {
          52.842281517964345`, 91.93456273819314}}],
        StatusArea[#, 27.869425547997007`]& ,
        TagBoxNote->"27.869425547997007"],
       StyleBox["27.869425547997007`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27.869425547997007`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.4, 0}, {0.6, 4.666477702191993}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{310.82205764611683`, 351.9745796637309}, {
          84.97264196839586, 91.93456273819314}}],
        StatusArea[#, 4.666477702191993]& ,
        TagBoxNote->"4.666477702191993"],
       StyleBox["4.666477702191993`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4.666477702191993, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.032, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 0.6}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ExpressionUUID -> "ecef6122-0ed0-4b00-b2c6-60ef660b213e"]
}, Open  ]],

Cell["\<\
Generate a graphical and potentially connected scale-free degree sequence;\
\>", "Text",
 ExpressionUUID -> "17854bdd-6df8-45c7-8af0-72bd3ef980e9"],

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "42", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"connectedGraphicalQ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CGSPotentiallyConnectedQ", "[", "#", "]"}], "&&", 
     RowBox[{"CGSGraphicalQ", "[", "#", "]"}]}], "&"}]}], ";"}], "\n", 
 RowBox[{"While", "@", 
  RowBox[{"Not", "@", 
   RowBox[{"connectedGraphicalQ", "[", 
    RowBox[{"ds", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"ZipfDistribution", "[", "1.5", "]"}], ",", "100"}], 
       "]"}]}]}], "]"}]}]}]}], "Input",
 ExpressionUUID -> "be8a77d8-8dcd-47b7-a170-8265e64c3a40"],

Cell["\<\
Sample both from the set of all graphs and from the set of connected graphs, \
then compare the distribution of the clustering coefficient for the two cases:\
\>", "Text",
 ExpressionUUID -> "787b5c7a-61c5-463b-bf2b-ffd12a03c2c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sample1", "=", 
   RowBox[{"CGSSampleProp", "[", 
    RowBox[{"ds", ",", "GlobalClusteringCoefficient", ",", "10000"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sample2", "=", 
   RowBox[{"CGSSampleProp", "[", 
    RowBox[{"ds", ",", "GlobalClusteringCoefficient", ",", "10000", ",", 
     RowBox[{"Connected", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "289f627a-8b06-4ac9-abf4-63d2bcb5a5cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sample1", ",", "sample2"}], "}"}], ",", 
   RowBox[{"{", "0.01", "}"}], ",", "\"\<PDF\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<clustering coefficient\>\"", ",", "\"\<PDF\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<all graphs\>\"", ",", "\"\<connected graphs\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "96823648-06f6-4aa1-84ac-d00e3e184316"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.45499999999999996`]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{{
             
             RectangleBox[{0.019999999999999997`, 0.}, {0.03, 
              2.417742451592283}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.03, 0.}, {0.04, 3.1882642071178178`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.04, 0.}, {0.049999999999999996`, 
              10.19842375346234}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.049999999999999996`, 0.}, {0.060000000000000005`,
               16.859764946272225`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.060000000000000005`, 0.}, {0.07, 
              17.072369364918377`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.07, 0.}, {0.08, 18.807718825921487`}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{0.08, 0.}, {0.09000000000000001, 
              7.441117001119372}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.09000000000000001, 0.}, {0.1, 
              10.338758659902407`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.1, 0.}, {0.11, 7.160908796691934}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.11, 0.}, {0.12000000000000001`, 
              3.961061406212581}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.12000000000000001`, 0.}, {0.13, 
              1.0001249955937999`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.13, 0.}, {0.13999999999999999`, 
              0.9063542176897768}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.13999999999999999`, 0.}, {0.15, 
              0.3856792215919455}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.15, 0.}, {0.16, 0.1668032324148812}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.16, 0.}, {0.16999999999999998`, 
              0.03744453475829804}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.16999999999999998`, 0.}, {0.18, 
              0.034539883257949155`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.18, 0.}, {0.19, 0.017623796556163963`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.19, 0.}, {0.19999999999999998`, 
              0.0027530173109738395`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.19999999999999998`, 0.}, {0.21, 
              0.0012077475576250623`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.21, 0.}, {0.22, 0.0011749014562948195`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.22, 0.}, {0.22999999999999998`, 
              0.00013089503155397104`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.22999999999999998`, 0.}, {0.24, 
              0.000018135767189602863`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.24, 0.}, {0.25, 9.930983008692178*^-6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.25, 0.}, {0.26, 5.398364048800143*^-6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.26, 0.}, {0.27, 3.6345235210843853`*^-7}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.27, 0.}, {0.27999999999999997`, 
              3.006771571690973*^-7}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.27999999999999997`, 0.}, {0.29, 
              5.604920624802972*^-12}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.29, 0.}, {0.3, 5.590725323708524*^-9}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.3, 0.}, {0.31, 8.726097717691017*^-9}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.33, 0.}, {0.34, 3.744949992403033*^-12}, 
              "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.45499999999999996`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{{
             
             RectangleBox[{0., 0.}, {0.01, 13.493499200876418`}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.01, 0.}, {0.019999999999999997`, 
              49.51486642363138}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.019999999999999997`, 0.}, {0.03, 
              30.491998806664668`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.03, 0.}, {0.04, 5.981982176304436}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.04, 0.}, {0.049999999999999996`, 
              0.4131044066916651}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.049999999999999996`, 0.}, {0.060000000000000005`,
               0.10281941596571098`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.060000000000000005`, 0.}, {0.07, 
              0.0017187406746158281`}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.07, 0.}, {0.08, 0.00001082919109715923}, 
              "RoundingRadius" -> 
              0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.0068000000000000005`, 0.}, Frame -> True, 
     FrameLabel -> {{
        FormBox["\"PDF\"", TraditionalForm], None}, {
        FormBox["\"clustering coefficient\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.01, 0.34}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"all graphs\"", "\"connected graphs\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 ExpressionUUID -> "dc2a0e8b-93cd-45ef-9182-5b42ae5dd4d9"]
}, Open  ]],

Cell["\<\
Plot the histogram of the natural logarithm of sampling weights:\
\>", "Text",
 ExpressionUUID -> "6fbc1b91-0044-40b5-9bfe-20b00310ce28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"weights1", "=", 
   RowBox[{
    RowBox[{"CGSSample", "[", 
     RowBox[{"ds", ",", "10000"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weights2", "=", 
   RowBox[{
    RowBox[{"CGSSample", "[", 
     RowBox[{"ds", ",", "10000", ",", 
      RowBox[{"Connected", "\[Rule]", "True"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "5c64a297-64c4-4a2e-9471-7884834fc60e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"weights1", ",", "weights2"}], "}"}], ",", "Automatic", ",", 
   "\"\<PDF\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<log sampling weights\>\"", ",", "\"\<PDF\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<all graphs\>\"", ",", "\"\<connected graphs\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "a2dc5e44-e2c7-421f-95e5-fb2933520e37"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5529999999999999]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5529999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-466., 0.}, 
                   NCache[{-464., 
                    Rational[1, 20000]}, {-464., 0.00005}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.00005]& , TagBoxNote -> "0.00005"], 
              
              StyleBox["0.00005`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00005, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-464., 0.}, 
                   NCache[{-462., 
                    Rational[7, 2500]}, {-462., 0.0028}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0028]& , TagBoxNote -> "0.0028"], 
              StyleBox["0.0028`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0028, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-462., 0.}, 
                   NCache[{-460., 
                    Rational[187, 10000]}, {-460., 0.0187}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0187]& , TagBoxNote -> "0.0187"], 
              StyleBox["0.0187`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0187, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-460., 0.}, 
                   NCache[{-458., 
                    Rational[893, 20000]}, {-458., 0.04465}], 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 0.04465]& , 
               TagBoxNote -> "0.04465"], 
              StyleBox["0.04465`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.04465, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-458., 0.}, 
                   NCache[{-456., 
                    Rational[723, 10000]}, {-456., 0.0723}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0723]& , TagBoxNote -> "0.0723"], 
              StyleBox["0.0723`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0723, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-456., 0.}, 
                   NCache[{-454., 
                    Rational[833, 10000]}, {-454., 0.0833}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0833]& , TagBoxNote -> "0.0833"], 
              StyleBox["0.0833`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0833, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-454., 0.}, 
                   NCache[{-452., 
                    Rational[1571, 20000]}, {-452., 0.07855}], 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 0.07855]& , 
               TagBoxNote -> "0.07855"], 
              StyleBox["0.07855`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.07855, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-452., 0.}, 
                   NCache[{-450., 
                    Rational[363, 5000]}, {-450., 0.0726}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0726]& , TagBoxNote -> "0.0726"], 
              StyleBox["0.0726`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0726, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-450., 0.}, 
                   NCache[{-448., 
                    Rational[203, 4000]}, {-448., 0.05075}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.05075]& , TagBoxNote -> "0.05075"], 
              
              StyleBox["0.05075`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.05075, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-448., 0.}, 
                   NCache[{-446., 
                    Rational[22, 625]}, {-446., 0.0352}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0352]& , TagBoxNote -> "0.0352"], 
              StyleBox["0.0352`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0352, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-446., 0.}, 
                   NCache[{-444., 
                    Rational[427, 20000]}, {-444., 0.02135}], 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 0.02135]& , 
               TagBoxNote -> "0.02135"], 
              StyleBox["0.02135`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.02135, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-444., 0.}, 
                   NCache[{-442., 
                    Rational[123, 10000]}, {-442., 0.0123}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0123]& , TagBoxNote -> "0.0123"], 
              StyleBox["0.0123`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0123, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-442., 0.}, 
                   NCache[{-440., 
                    Rational[21, 5000]}, {-440., 0.0042}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0042]& , TagBoxNote -> "0.0042"], 
              StyleBox["0.0042`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0042, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-440., 0.}, 
                   NCache[{-438., 
                    Rational[9, 4000]}, {-438., 0.00225}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.00225]& , TagBoxNote -> "0.00225"], 
              
              StyleBox["0.00225`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00225, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-438., 0.}, 
                   NCache[{-436., 
                    Rational[3, 4000]}, {-436., 0.00075}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.00075]& , TagBoxNote -> "0.00075"], 
              
              StyleBox["0.00075`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00075, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-436., 0.}, 
                   NCache[{-434., 
                    Rational[3, 20000]}, {-434., 0.00015}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.00015]& , TagBoxNote -> "0.00015"], 
              
              StyleBox["0.00015`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00015, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-434., 0.}, 
                   NCache[{-432., 
                    Rational[1, 10000]}, {-432., 0.0001}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0001]& , TagBoxNote -> "0.0001"], 
              StyleBox["0.0001`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0001, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5529999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-446., 0.}, 
                   NCache[{-444., 
                    Rational[1, 20000]}, {-444., 0.00005}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.00005]& , TagBoxNote -> "0.00005"], 
              
              StyleBox["0.00005`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00005, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-444., 0.}, 
                   NCache[{-442., 
                    Rational[17, 10000]}, {-442., 0.0017}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0017]& , TagBoxNote -> "0.0017"], 
              StyleBox["0.0017`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0017, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-442., 0.}, 
                   NCache[{-440., 
                    Rational[113, 4000]}, {-440., 0.02825}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.02825]& , TagBoxNote -> "0.02825"], 
              
              StyleBox["0.02825`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.02825, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-440., 0.}, 
                   NCache[{-438., 
                    Rational[243, 2500]}, {-438., 0.0972}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0972]& , TagBoxNote -> "0.0972"], 
              StyleBox["0.0972`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0972, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-438., 0.}, 
                   NCache[{-436., 
                    Rational[567, 4000]}, {-436., 0.14175}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.14175]& , TagBoxNote -> "0.14175"], 
              
              StyleBox["0.14175`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.14175, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-436., 0.}, 
                   NCache[{-434., 
                    Rational[1163, 10000]}, {-434., 0.1163}], 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 0.1163]& , 
               TagBoxNote -> "0.1163"], 
              StyleBox["0.1163`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.1163, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-434., 0.}, 
                   NCache[{-432., 
                    Rational[11, 160]}, {-432., 0.06875}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.06875]& , TagBoxNote -> "0.06875"], 
              
              StyleBox["0.06875`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.06875, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-432., 0.}, 
                   NCache[{-430., 
                    Rational[319, 10000]}, {-430., 0.0319}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0319]& , TagBoxNote -> "0.0319"], 
              StyleBox["0.0319`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0319, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-430., 0.}, 
                   NCache[{-428., 
                    Rational[207, 20000]}, {-428., 0.01035}], 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 0.01035]& , 
               TagBoxNote -> "0.01035"], 
              StyleBox["0.01035`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.01035, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-428., 0.}, 
                   NCache[{-426., 
                    Rational[2, 625]}, {-426., 0.0032}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.0032]& , TagBoxNote -> "0.0032"], 
              StyleBox["0.0032`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.0032, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-426., 0.}, 
                   NCache[{-424., 
                    Rational[11, 20000]}, {-424., 0.00055}], "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.00055]& , TagBoxNote -> "0.00055"], 
              
              StyleBox["0.00055`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00055, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-466.84, 0.}, Frame -> True, FrameLabel -> {{
        FormBox["\"PDF\"", TraditionalForm], None}, {
        FormBox["\"log sampling weights\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-466., -424.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"all graphs\"", "\"connected graphs\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5529999999999999]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5529999999999999]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5529999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 ExpressionUUID -> "660ea4e8-e01c-4aaf-b952-a9f3e234e64d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{998, 905},
WindowMargins->{{68, Automatic}, {Automatic, 44}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "862fca7a-be81-49a5-8e26-3d259899e006"
]

